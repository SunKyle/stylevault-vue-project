{"ast":null,"code":"function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { computed } from 'vue';\nimport OutfitCard from './OutfitCard.vue';\n\n// Props定义\n\nexport default {\n  __name: 'SavedOutfits',\n  props: {\n    savedOutfits: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    currentPage: {\n      type: Number,\n      \"default\": 1\n    },\n    itemsPerPage: {\n      type: Number,\n      \"default\": 4\n    }\n  },\n  emits: ['load-outfit', 'delete-outfit', 'share-outfit', 'page-change', 'scroll-to-create'],\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose,\n      __emit = _ref.emit;\n    __expose();\n    var props = __props;\n\n    // 事件定义\n    var emit = __emit;\n\n    // 计算当前页要显示的搭配\n    var currentPageOutfits = computed(function () {\n      var start = (props.currentPage - 1) * props.itemsPerPage;\n      var end = start + props.itemsPerPage;\n      // 使用已经过滤后的搭配数据\n      return filteredOutfits.value.slice(start, end);\n    });\n\n    // 计算过滤后的搭配\n    var filteredOutfits = computed(function () {\n      // 使用与currentPageOutfits相同的过滤条件\n      return props.savedOutfits.filter(function (outfit) {\n        return outfit && (outfit.id || outfit.name);\n      });\n    });\n\n    // 计算总页数\n    var totalPages = computed(function () {\n      return Math.ceil(filteredOutfits.value.length / props.itemsPerPage);\n    });\n\n    // 格式化日期\n    function formatDate(date) {\n      var d = new Date(date);\n      return \"\".concat(d.getFullYear(), \"/\").concat((d.getMonth() + 1).toString().padStart(2, '0'), \"/\").concat(d.getDate().toString().padStart(2, '0'));\n    }\n\n    // 获取搭配衣物类型统计\n    function getOutfitStats(items) {\n      var stats = {};\n      items.forEach(function (item) {\n        // 提取类型（如\"上衣\"、\"裤子\"等）\n        var type = item.type.split(' · ')[0];\n        if (stats[type]) {\n          stats[type]++;\n        } else {\n          stats[type] = 1;\n        }\n      });\n      return stats;\n    }\n\n    // 获取搭配标签\n    function getOutfitTags(items) {\n      var tags = new Set();\n      items.forEach(function (item) {\n        if (item.tags && Array.isArray(item.tags)) {\n          item.tags.forEach(function (tag) {\n            return tags.add(tag);\n          });\n        }\n      });\n      return Array.from(tags);\n    }\n\n    // 处理删除搭配事件\n    function handleDeleteOutfit(outfitId) {\n      // 找到搭配在数组中的索引\n      var index = props.savedOutfits.findIndex(function (outfit) {\n        return outfit.id === outfitId;\n      });\n      if (index !== -1) {\n        emit('delete-outfit', index);\n      }\n    }\n\n    // 处理编辑搭配事件\n    function handleEditOutfit(editedOutfit) {\n      // 找到搭配在数组中的索引\n      var index = props.savedOutfits.findIndex(function (outfit) {\n        return outfit.id === editedOutfit.id;\n      });\n      if (index !== -1) {\n        // 更新搭配信息\n        var updatedOutfit = _objectSpread(_objectSpread({}, props.savedOutfits[index]), {}, {\n          name: editedOutfit.name,\n          scene: editedOutfit.scene\n        });\n        // 发送编辑事件\n        emit('edit-outfit', {\n          index: index,\n          outfit: updatedOutfit\n        });\n      }\n    }\n\n    // 获取随机点赞数（模拟）\n    function getRandomLikes() {\n      return Math.floor(Math.random() * 100) + 1;\n    }\n\n    // 获取随机评论数（模拟）\n    function getRandomComments() {\n      return Math.floor(Math.random() * 20) + 1;\n    }\n    var __returned__ = {\n      props: props,\n      emit: emit,\n      currentPageOutfits: currentPageOutfits,\n      filteredOutfits: filteredOutfits,\n      totalPages: totalPages,\n      formatDate: formatDate,\n      getOutfitStats: getOutfitStats,\n      getOutfitTags: getOutfitTags,\n      handleDeleteOutfit: handleDeleteOutfit,\n      handleEditOutfit: handleEditOutfit,\n      getRandomLikes: getRandomLikes,\n      getRandomComments: getRandomComments,\n      computed: computed,\n      OutfitCard: OutfitCard\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","OutfitCard","props","__props","emit","__emit","currentPageOutfits","start","currentPage","itemsPerPage","end","filteredOutfits","value","slice","savedOutfits","filter","outfit","id","name","totalPages","Math","ceil","length","formatDate","date","d","Date","concat","getFullYear","getMonth","toString","padStart","getDate","getOutfitStats","items","stats","forEach","item","type","split","getOutfitTags","tags","Set","Array","isArray","tag","add","from","handleDeleteOutfit","outfitId","index","findIndex","handleEditOutfit","editedOutfit","updatedOutfit","_objectSpread","scene","getRandomLikes","floor","random","getRandomComments"],"sources":["/Users/sunxiaokai/Desktop/stylevault-vue-project/src/components/features/inspiration/SavedOutfits.vue"],"sourcesContent":["<template>\n  <div class=\"mb-12\">\n    <!-- 页面标题 -->\n    <div class=\"text-center mb-12\">\n      <h1 class=\"text-3xl md:text-4xl font-bold mb-3 bg-gradient-to-r from-red-500 via-orange-500 to-yellow-500 bg-clip-text text-transparent\">\n        我的时尚灵感\n      </h1>\n      <p class=\"text-neutral-500 max-w-2xl mx-auto\">\n        探索和创建完美的服装搭配，展现你的个人风格。从已有的衣物中寻找灵感，打造独特造型。\n      </p>\n    </div>\n\n    <!-- 已保存搭配区域 -->\n    <div class=\"mb-12\">\n      <div class=\"flex justify-between items-center mb-6\">\n        <h2 class=\"text-2xl font-bold flex items-center\">\n          <font-awesome-icon :icon=\"['fas', 'heart']\" class=\"text-red-500 mr-2\" />\n          我的搭配\n        </h2>\n        <span class=\"bg-red-500/10 text-red-600 px-3 py-1 rounded-full text-sm font-medium\">\n          {{ savedOutfits.length }}套方案\n        </span>\n      </div>\n\n      <div class=\"bg-white rounded-2xl p-6 shadow-md relative overflow-hidden\">\n        <!-- 装饰元素 -->\n        <div class=\"absolute -top-12 -right-12 w-40 h-40 bg-red-500/5 rounded-full\"></div>\n        <div class=\"absolute -bottom-20 -left-20 w-60 h-60 bg-orange-500/5 rounded-full\"></div>\n\n        <!-- 已保存搭配列表 -->\n        <div v-if=\"currentPageOutfits.length > 0\" class=\"relative z-10\">\n          <!-- 搭配卡片自适应网格布局 -->\n          <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n            <OutfitCard \n              v-for=\"outfit in currentPageOutfits\" \n              :key=\"outfit.id\" \n              :outfit=\"outfit\"\n              @load-outfit=\"$emit('load-outfit', $event)\"\n              @delete-outfit=\"handleDeleteOutfit\"\n              @edit-outfit=\"handleEditOutfit\"\n            />\n          </div>\n\n          <!-- 分页控件 - 优化设计 -->\n          <div v-if=\"filteredOutfits.length > props.itemsPerPage\" class=\"flex justify-center mt-8\">\n            <div class=\"flex items-center space-x-2 bg-white rounded-full px-4 py-2 shadow-sm border border-neutral-100\">\n            <!-- 上一页按钮 -->\n            <button \n              @click=\"$emit('page-change', Math.max(1, currentPage - 1))\"\n              :disabled=\"currentPage === 1\"\n              class=\"w-9 h-9 flex items-center justify-center rounded-full transition-all duration-300\"\n              :class=\"currentPage === 1 ? 'text-neutral-300 cursor-not-allowed' : 'text-neutral-600 hover:bg-neutral-100 hover:text-red-500'\"\n            >\n              <font-awesome-icon :icon=\"['fas', 'chevron-left']\" />\n            </button>\n\n            <!-- 页码显示 -->\n            <div class=\"flex items-center px-2\">\n              <span class=\"text-sm font-medium text-neutral-700\">{{ currentPage }}</span>\n              <span class=\"text-sm text-neutral-400 mx-1\">/</span>\n              <span class=\"text-sm text-neutral-500\">{{ totalPages }}</span>\n            </div>\n\n            <!-- 下一页按钮 -->\n            <button \n              @click=\"$emit('page-change', Math.min(totalPages, currentPage + 1))\"\n              :disabled=\"currentPage === totalPages\"\n              class=\"w-9 h-9 flex items-center justify-center rounded-full transition-all duration-300\"\n              :class=\"currentPage === totalPages ? 'text-neutral-300 cursor-not-allowed' : 'text-neutral-600 hover:bg-neutral-100 hover:text-primary'\"\n            >\n              <font-awesome-icon :icon=\"['fas', 'chevron-right']\" />\n            </button>\n          </div>\n        </div>\n        </div>\n\n        <!-- 空状态 - 增强视觉吸引力 -->\n        <div v-else class=\"text-center py-20 border border-dashed border-neutral-200 rounded-xl relative z-10 bg-gradient-to-b from-white to-neutral-50 max-w-2xl mx-auto\">\n          <!-- 装饰元素 -->\n          <div class=\"absolute -top-6 -right-6 w-24 h-24 bg-primary/5 rounded-full blur-xl\"></div>\n          <div class=\"absolute -bottom-6 -left-6 w-24 h-24 bg-secondary/5 rounded-full blur-xl\"></div>\n\n          <div class=\"w-24 h-24 rounded-full bg-gradient-to-br from-primary/10 to-secondary/10 flex items-center justify-center mx-auto mb-6 transform transition-all duration-500 hover:scale-110\">\n            <font-awesome-icon :icon=\"['fas', 'heart']\" class=\"text-primary text-3xl\" />\n          </div>\n          <p class=\"text-neutral-600 text-lg mb-3 font-medium\">暂无保存的搭配方案</p>\n          <p class=\"text-neutral-400 text-sm mb-8 max-w-sm mx-auto\">创建您的第一套搭配方案，开始记录和探索您的时尚灵感</p>\n          <button @click=\"$emit('scroll-to-create')\"\n                  class=\"bg-gradient-to-r from-primary to-secondary hover:from-primary/90 hover:to-secondary/90 text-white font-medium py-3 px-8 rounded-xl transition-all duration-300 transform hover:scale-105 shadow-md hover:shadow-lg active:scale-95\">\n            开始创建\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport OutfitCard from './OutfitCard.vue'\n\n// Props定义\nconst props = defineProps({\n  savedOutfits: {\n    type: Array,\n    default: () => []\n  },\n  currentPage: {\n    type: Number,\n    default: 1\n  },\n  itemsPerPage: {\n    type: Number,\n    default: 4\n  }\n})\n\n// 事件定义\nconst emit = defineEmits(['load-outfit', 'delete-outfit', 'share-outfit', 'page-change', 'scroll-to-create'])\n\n// 计算当前页要显示的搭配\nconst currentPageOutfits = computed(() => {\n  const start = (props.currentPage - 1) * props.itemsPerPage\n  const end = start + props.itemsPerPage\n  // 使用已经过滤后的搭配数据\n  return filteredOutfits.value.slice(start, end)\n})\n\n// 计算过滤后的搭配\nconst filteredOutfits = computed(() => {\n  // 使用与currentPageOutfits相同的过滤条件\n  return props.savedOutfits.filter(outfit => {\n    return outfit && (outfit.id || outfit.name)\n  })\n})\n\n// 计算总页数\nconst totalPages = computed(() => {\n  return Math.ceil(filteredOutfits.value.length / props.itemsPerPage)\n})\n\n// 格式化日期\nfunction formatDate(date) {\n  const d = new Date(date)\n  return `${d.getFullYear()}/${(d.getMonth() + 1).toString().padStart(2, '0')}/${d.getDate().toString().padStart(2, '0')}`\n}\n\n// 获取搭配衣物类型统计\nfunction getOutfitStats(items) {\n  const stats = {}\n  items.forEach(item => {\n    // 提取类型（如\"上衣\"、\"裤子\"等）\n    const type = item.type.split(' · ')[0]\n    if (stats[type]) {\n      stats[type]++\n    } else {\n      stats[type] = 1\n    }\n  })\n  return stats\n}\n\n// 获取搭配标签\nfunction getOutfitTags(items) {\n  const tags = new Set()\n  items.forEach(item => {\n    if (item.tags && Array.isArray(item.tags)) {\n      item.tags.forEach(tag => tags.add(tag))\n    }\n  })\n  return Array.from(tags)\n}\n\n// 处理删除搭配事件\nfunction handleDeleteOutfit(outfitId) {\n  // 找到搭配在数组中的索引\n  const index = props.savedOutfits.findIndex(outfit => outfit.id === outfitId)\n  if (index !== -1) {\n    emit('delete-outfit', index)\n  }\n}\n\n// 处理编辑搭配事件\nfunction handleEditOutfit(editedOutfit) {\n  // 找到搭配在数组中的索引\n  const index = props.savedOutfits.findIndex(outfit => outfit.id === editedOutfit.id)\n  if (index !== -1) {\n    // 更新搭配信息\n    const updatedOutfit = {\n      ...props.savedOutfits[index],\n      name: editedOutfit.name,\n      scene: editedOutfit.scene\n    }\n    // 发送编辑事件\n    emit('edit-outfit', { index, outfit: updatedOutfit })\n  }\n}\n\n// 获取随机点赞数（模拟）\nfunction getRandomLikes() {\n  return Math.floor(Math.random() * 100) + 1\n}\n\n// 获取随机评论数（模拟）\nfunction getRandomComments() {\n  return Math.floor(Math.random() * 20) + 1\n}\n</script>\n\n<style scoped>\n/* 自定义滚动条样式 */\n.scrollbar-thin::-webkit-scrollbar {\n  width: 4px;\n}\n\n.scrollbar-thin::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.scrollbar-thin::-webkit-scrollbar-thumb {\n  background: rgba(0, 0, 0, 0.1);\n  border-radius: 2px;\n}\n\n.scrollbar-thin::-webkit-scrollbar-thumb:hover {\n  background: rgba(0, 0, 0, 0.2);\n}\n\n/* 悬停动画增强 */\n.group:hover .text-primary {\n  color: theme('colors.primary', #3b82f6);\n}\n\n/* 卡片悬停效果增强 */\n.shadow-md {\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05), 0 2px 4px -1px rgba(0, 0, 0, 0.03);\n}\n\n.shadow-lg {\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.08), 0 4px 6px -2px rgba(0, 0, 0, 0.04);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}