{"ast":null,"code":"function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nimport { ref, reactive, computed, watch } from 'vue';\nimport OutfitCard from './OutfitCard.vue';\n\n// Props定义\n\nexport default {\n  __name: 'SavedOutfits',\n  props: {\n    savedOutfits: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    currentPage: {\n      type: Number,\n      \"default\": 1\n    },\n    itemsPerPage: {\n      type: Number,\n      \"default\": 8\n    }\n  },\n  emits: ['load-outfit', 'delete-outfit', 'share-outfit', 'page-change', 'scroll-to-create'],\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose,\n      __emit = _ref.emit;\n    __expose();\n    var props = __props;\n\n    // 事件定义\n    var emit = __emit;\n\n    // 计算当前页要显示的搭配\n    var currentPageOutfits = computed(function () {\n      // 如果处于展开状态，显示双倍数量的卡片\n      var itemsToShow = expandedDisplay.value ? props.itemsPerPage * 2 : props.itemsPerPage;\n      var start = (props.currentPage - 1) * props.itemsPerPage;\n      var end = start + itemsToShow;\n      // 使用已经过滤后的搭配数据\n      return filteredOutfits.value.slice(start, end);\n    });\n\n    // 搜索和筛选状态\n    var searchQuery = ref('');\n    var showFilterPanel = ref(false);\n\n    // 显示模式状态\n    var expandedDisplay = ref(false);\n\n    // 当前编辑的卡片ID\n    var editingOutfitId = ref(null);\n    var filters = ref({\n      scene: [],\n      season: [],\n      style: []\n    });\n    var appliedFilters = ref({\n      scene: [],\n      season: [],\n      style: []\n    });\n\n    // 筛选选项\n    var sceneOptions = [{\n      value: 'daily',\n      label: '日常'\n    }, {\n      value: 'work',\n      label: '工作'\n    }, {\n      value: 'party',\n      label: '聚会'\n    }, {\n      value: 'date',\n      label: '约会'\n    }, {\n      value: 'travel',\n      label: '旅行'\n    }, {\n      value: 'sports',\n      label: '运动'\n    }];\n    var seasonOptions = [{\n      value: 'spring',\n      label: '春季'\n    }, {\n      value: 'summer',\n      label: '夏季'\n    }, {\n      value: 'autumn',\n      label: '秋季'\n    }, {\n      value: 'winter',\n      label: '冬季'\n    }];\n    var styleOptions = [{\n      value: 'casual',\n      label: '休闲'\n    }, {\n      value: 'formal',\n      label: '正式'\n    }, {\n      value: 'business',\n      label: '商务'\n    }, {\n      value: 'street',\n      label: '街头'\n    }, {\n      value: 'vintage',\n      label: '复古'\n    }, {\n      value: 'minimalist',\n      label: '极简'\n    }];\n\n    // 获取季节标签\n    function getSeasonLabel(value) {\n      var season = seasonOptions.find(function (option) {\n        return option.value === value;\n      });\n      return season ? season.label : value;\n    }\n\n    // 获取风格标签\n    function getStyleLabel(value) {\n      var style = styleOptions.find(function (option) {\n        return option.value === value;\n      });\n      return style ? style.label : value;\n    }\n\n    // 过滤搭配列表\n    var filteredOutfits = computed(function () {\n      return props.savedOutfits.filter(function (outfit) {\n        // 搜索过滤\n        var matchesSearch = searchQuery.value === '' || outfit.name.toLowerCase().includes(searchQuery.value.toLowerCase()) || outfit.scene && outfit.scene.toLowerCase().includes(searchQuery.value.toLowerCase()) || outfit.season && getSeasonLabel(outfit.season).toLowerCase().includes(searchQuery.value.toLowerCase()) || outfit.style && getStyleLabel(outfit.style).toLowerCase().includes(searchQuery.value.toLowerCase());\n\n        // 筛选条件过滤\n        var matchesScene = appliedFilters.value.scene.length === 0 || outfit.scene && appliedFilters.value.scene.includes(outfit.scene);\n        var matchesSeason = appliedFilters.value.season.length === 0 || outfit.season && appliedFilters.value.season.includes(outfit.season);\n        var matchesStyle = appliedFilters.value.style.length === 0 || outfit.style && appliedFilters.value.style.includes(outfit.style);\n        return matchesSearch && matchesScene && matchesSeason && matchesStyle;\n      });\n    });\n\n    // 计算总页数\n    var totalPages = computed(function () {\n      // 根据展开状态计算总页数\n      var itemsPerPage = expandedDisplay.value ? props.itemsPerPage * 2 : props.itemsPerPage;\n      return Math.ceil(filteredOutfits.value.length / itemsPerPage);\n    });\n\n    // 计算显示的页码范围\n    var displayedPageRange = computed(function () {\n      var current = props.currentPage;\n      var total = totalPages.value;\n      var delta = 2; // 当前页前后显示的页码数\n\n      if (total <= 7) {\n        // 如果总页数小于等于7，全部显示\n        return Array.from({\n          length: total\n        }, function (_, i) {\n          return i + 1;\n        });\n      }\n      var range = [];\n      var hasLeftSpill = current > delta + 1;\n      var hasRightSpill = current < total - delta;\n      if (hasLeftSpill && !hasRightSpill) {\n        // 右边不溢出\n        var start = total - 5;\n        for (var i = start; i <= total; i++) {\n          range.push(i);\n        }\n        range.unshift('...');\n        range.unshift(1);\n      } else if (!hasLeftSpill && hasRightSpill) {\n        // 左边不溢出\n        for (var _i = 1; _i <= 5; _i++) {\n          range.push(_i);\n        }\n        range.push('...');\n        range.push(total);\n      } else if (hasLeftSpill && hasRightSpill) {\n        // 两边都溢出\n        range.push(1);\n        range.push('...');\n        for (var _i2 = current - delta; _i2 <= current + delta; _i2++) {\n          range.push(_i2);\n        }\n        range.push('...');\n        range.push(total);\n      } else {\n        // 都不溢出\n        for (var _i3 = 1; _i3 <= total; _i3++) {\n          range.push(_i3);\n        }\n      }\n      return range;\n    });\n\n    // 计算激活的筛选器数量\n    var activeFiltersCount = computed(function () {\n      return appliedFilters.value.scene.length + appliedFilters.value.season.length + appliedFilters.value.style.length;\n    });\n\n    // 切换筛选面板\n    function toggleFilterPanel() {\n      showFilterPanel.value = !showFilterPanel.value;\n    }\n\n    // 切换筛选条件\n    function toggleFilter(type, value) {\n      var index = filters.value[type].indexOf(value);\n      if (index === -1) {\n        filters.value[type].push(value);\n      } else {\n        filters.value[type].splice(index, 1);\n      }\n    }\n\n    // 应用筛选\n    function applyFilters() {\n      // 深拷贝筛选条件\n      appliedFilters.value = {\n        scene: _toConsumableArray(filters.value.scene),\n        season: _toConsumableArray(filters.value.season),\n        style: _toConsumableArray(filters.value.style)\n      };\n\n      // 关闭筛选面板\n      showFilterPanel.value = false;\n\n      // 重置到第一页\n      if (props.currentPage !== 1) {\n        emit('page-change', 1);\n      }\n    }\n\n    // 清除筛选\n    function clearFilters() {\n      filters.value = {\n        scene: [],\n        season: [],\n        style: []\n      };\n      appliedFilters.value = {\n        scene: [],\n        season: [],\n        style: []\n      };\n    }\n\n    // 切换显示模式\n    function toggleDisplayMode() {\n      expandedDisplay.value = !expandedDisplay.value;\n\n      // 如果切换为展开模式且当前页没有足够的内容，则返回第一页\n      if (expandedDisplay.value && currentPageOutfits.value.length < props.itemsPerPage) {\n        emit('page-change', 1);\n      }\n    }\n\n    // 分页操作\n    function prevPage() {\n      if (props.currentPage > 1) {\n        emit('page-change', props.currentPage - 1);\n      }\n    }\n    function nextPage() {\n      if (props.currentPage < totalPages.value) {\n        emit('page-change', props.currentPage + 1);\n      }\n    }\n    function goToPage(page) {\n      if (page !== props.currentPage) {\n        emit('page-change', page);\n      }\n    }\n\n    // 处理搭配删除\n    function handleDeleteOutfit(outfitId) {\n      emit('delete-outfit', outfitId);\n\n      // 如果当前页没有内容了，返回上一页\n      if (currentPageOutfits.value.length === 1 && props.currentPage > 1) {\n        emit('page-change', props.currentPage - 1);\n      }\n    }\n\n    // 处理搭配编辑\n    function handleEditOutfit(updatedOutfit) {\n      emit('edit-outfit', updatedOutfit);\n    }\n\n    // 点击外部关闭筛选面板\n    var handleClickOutside = function handleClickOutside(event) {\n      var filterPanel = document.querySelector('.relative');\n      if (showFilterPanel.value && filterPanel && !filterPanel.contains(event.target)) {\n        showFilterPanel.value = false;\n      }\n    };\n\n    // 监听点击事件\n    watch(showFilterPanel, function (newValue) {\n      if (newValue) {\n        setTimeout(function () {\n          document.addEventListener('click', handleClickOutside);\n        }, 0);\n      } else {\n        document.removeEventListener('click', handleClickOutside);\n      }\n    });\n    var __returned__ = {\n      props: props,\n      emit: emit,\n      currentPageOutfits: currentPageOutfits,\n      searchQuery: searchQuery,\n      showFilterPanel: showFilterPanel,\n      expandedDisplay: expandedDisplay,\n      editingOutfitId: editingOutfitId,\n      filters: filters,\n      appliedFilters: appliedFilters,\n      sceneOptions: sceneOptions,\n      seasonOptions: seasonOptions,\n      styleOptions: styleOptions,\n      getSeasonLabel: getSeasonLabel,\n      getStyleLabel: getStyleLabel,\n      filteredOutfits: filteredOutfits,\n      totalPages: totalPages,\n      displayedPageRange: displayedPageRange,\n      activeFiltersCount: activeFiltersCount,\n      toggleFilterPanel: toggleFilterPanel,\n      toggleFilter: toggleFilter,\n      applyFilters: applyFilters,\n      clearFilters: clearFilters,\n      toggleDisplayMode: toggleDisplayMode,\n      prevPage: prevPage,\n      nextPage: nextPage,\n      goToPage: goToPage,\n      handleDeleteOutfit: handleDeleteOutfit,\n      handleEditOutfit: handleEditOutfit,\n      handleClickOutside: handleClickOutside,\n      ref: ref,\n      reactive: reactive,\n      computed: computed,\n      watch: watch,\n      OutfitCard: OutfitCard\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","watch","OutfitCard","props","__props","emit","__emit","currentPageOutfits","itemsToShow","expandedDisplay","value","itemsPerPage","start","currentPage","end","filteredOutfits","slice","searchQuery","showFilterPanel","editingOutfitId","filters","scene","season","style","appliedFilters","sceneOptions","label","seasonOptions","styleOptions","getSeasonLabel","find","option","getStyleLabel","savedOutfits","filter","outfit","matchesSearch","name","toLowerCase","includes","matchesScene","length","matchesSeason","matchesStyle","totalPages","Math","ceil","displayedPageRange","current","total","delta","Array","from","_","i","range","hasLeftSpill","hasRightSpill","push","unshift","activeFiltersCount","toggleFilterPanel","toggleFilter","type","index","indexOf","splice","applyFilters","_toConsumableArray","clearFilters","toggleDisplayMode","prevPage","nextPage","goToPage","page","handleDeleteOutfit","outfitId","handleEditOutfit","updatedOutfit","handleClickOutside","event","filterPanel","document","querySelector","contains","target","newValue","setTimeout","addEventListener","removeEventListener"],"sources":["/Users/sunxiaokai/Desktop/stylevault-vue-project/src/components/features/inspiration/SavedOutfits.vue"],"sourcesContent":["<template>\n  <div class=\"mb-12\">\n    <!-- 页面标题 -->\n    <div class=\"text-center mb-12\">\n      <h1 class=\"text-3xl md:text-4xl font-bold mb-3 bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n        我的时尚灵感\n      </h1>\n      <p class=\"text-neutral-500 max-w-2xl mx-auto\">\n        探索和创建完美的服装搭配，展现你的个人风格。从已有的衣物中寻找灵感，打造独特造型。\n      </p>\n    </div>\n\n    <!-- 已保存搭配区域 -->\n    <div class=\"mb-12\">\n      <div class=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-6 gap-4\">\n        <div class=\"flex items-center\">\n          <h2 class=\"text-2xl font-bold flex items-center\">\n            <font-awesome-icon :icon=\"['fas', 'heart']\" class=\"text-primary mr-2\" />\n            我的搭配\n          </h2>\n          <span class=\"bg-primary/10 text-primary px-3 py-1 rounded-full text-sm font-medium ml-3\">\n            {{ filteredOutfits.length }}套方案\n          </span>\n        </div>\n\n        <!-- 搜索和筛选区域 -->\n        <div class=\"flex flex-col md:flex-row gap-3 w-full md:w-auto\">\n          <!-- 搜索框 -->\n          <div class=\"relative w-full md:w-64\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <font-awesome-icon :icon=\"['fas', 'search']\" class=\"text-gray-400\" />\n            </div>\n            <input\n              v-model=\"searchQuery\"\n              type=\"text\"\n              class=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary text-sm\"\n              placeholder=\"搜索搭配名称或标签...\"\n            />\n          </div>\n\n          <!-- 筛选按钮 -->\n          <div class=\"relative\">\n            <button\n              @click=\"toggleFilterPanel\"\n              class=\"flex items-center gap-2 px-4 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary text-sm transition-colors\"\n            >\n              <font-awesome-icon :icon=\"['fas', 'filter']\" />\n              <span>筛选</span>\n              <span v-if=\"activeFiltersCount > 0\" class=\"bg-primary text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\n                {{ activeFiltersCount }}\n              </span>\n            </button>\n\n            <!-- 筛选面板 -->\n            <div v-if=\"showFilterPanel\" class=\"absolute right-0 mt-2 w-72 bg-white rounded-lg shadow-lg border border-gray-200 z-20 p-4\">\n              <div class=\"flex justify-between items-center mb-4\">\n                <h3 class=\"font-medium text-gray-900\">筛选条件</h3>\n                <button @click=\"clearFilters\" class=\"text-sm text-primary hover:text-primary/80\">\n                  清除筛选\n                </button>\n              </div>\n\n              <!-- 场景筛选 -->\n              <div class=\"mb-4\">\n                <h4 class=\"text-sm font-medium text-gray-700 mb-2\">适用场景</h4>\n                <div class=\"flex flex-wrap gap-2\">\n                  <button\n                    v-for=\"scene in sceneOptions\"\n                    :key=\"scene.value\"\n                    @click=\"toggleFilter('scene', scene.value)\"\n                    class=\"px-3 py-1.5 text-xs rounded-full transition-colors\"\n                    :class=\"filters.value.scene.includes(scene.value)\n                      ? 'bg-primary text-white'\n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\"\n                  >\n                    {{ scene.label }}\n                  </button>\n                </div>\n              </div>\n\n              <!-- 季节筛选 -->\n              <div class=\"mb-4\">\n                <h4 class=\"text-sm font-medium text-gray-700 mb-2\">适用季节</h4>\n                <div class=\"flex flex-wrap gap-2\">\n                  <button\n                    v-for=\"season in seasonOptions\"\n                    :key=\"season.value\"\n                    @click=\"toggleFilter('season', season.value)\"\n                    class=\"px-3 py-1.5 text-xs rounded-full transition-colors\"\n                    :class=\"filters.value.season.includes(season.value)\n                      ? 'bg-green-500 text-white'\n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\"\n                  >\n                    {{ season.label }}\n                  </button>\n                </div>\n              </div>\n\n              <!-- 风格筛选 -->\n              <div class=\"mb-4\">\n                <h4 class=\"text-sm font-medium text-gray-700 mb-2\">搭配风格</h4>\n                <div class=\"flex flex-wrap gap-2\">\n                  <button\n                    v-for=\"style in styleOptions\"\n                    :key=\"style.value\"\n                    @click=\"toggleFilter('style', style.value)\"\n                    class=\"px-3 py-1.5 text-xs rounded-full transition-colors\"\n                    :class=\"filters.value.style.includes(style.value)\n                      ? 'bg-purple-500 text-white'\n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\"\n                  >\n                    {{ style.label }}\n                  </button>\n                </div>\n              </div>\n\n              <div class=\"flex gap-2 mt-6\">\n                <button\n                  @click=\"applyFilters\"\n                  class=\"flex-1 bg-primary hover:bg-primary/90 text-white font-medium py-2 rounded-lg transition-colors\"\n                >\n                  应用筛选\n                </button>\n                <button\n                  @click=\"toggleFilterPanel\"\n                  class=\"flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-2 rounded-lg transition-colors\"\n                >\n                  取消\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- 新建搭配按钮 -->\n          <button\n            @click=\"$emit('scroll-to-create')\"\n            class=\"flex items-center gap-2 px-4 py-2 bg-primary hover:bg-primary/90 text-white rounded-lg transition-colors text-sm font-medium shadow-sm hover:shadow\"\n          >\n            <font-awesome-icon :icon=\"['fas', 'plus']\" />\n            <span>新建搭配</span>\n          </button>\n        </div>\n      </div>\n\n      <!-- 已保存搭配列表 -->\n      <div v-if=\"filteredOutfits.length > 0\" class=\"relative z-10\">\n        <!-- 搭配卡片自适应网格布局 -->\n        <div class=\"grid gap-6 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 auto-rows-fr\">\n          <OutfitCard\n            v-for=\"outfit in currentPageOutfits\"\n            :key=\"outfit.id\"\n            :outfit=\"outfit\"\n            :is-editing=\"editingOutfitId === outfit.id\"\n            @load-outfit=\"$emit('load-outfit', $event)\"\n            @delete-outfit=\"handleDeleteOutfit\"\n            @edit-start=\"editingOutfitId = outfit.id\"\n            @edit-end=\"editingOutfitId = null\"\n            @edit-outfit=\"handleEditOutfit\"\n          />\n        </div>\n\n        <!-- 分页控件和显示模式切换 - 优化设计 -->\n        <div v-if=\"filteredOutfits.length > props.itemsPerPage\" class=\"flex justify-between items-center mt-8 px-4\">\n          <!-- 显示模式切换按钮 -->\n          <button\n            @click=\"toggleDisplayMode\"\n            class=\"flex items-center gap-2 px-4 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary text-sm transition-colors shadow-sm\"\n          >\n            <font-awesome-icon :icon=\"expandedDisplay ? 'compress-alt' : 'expand-alt'\" />\n            <span>{{ expandedDisplay ? '收起显示' : '展开显示' }}</span>\n          </button>\n\n          <!-- 分页控件 -->\n          <div class=\"flex items-center gap-2\">\n            <!-- 上一页按钮 -->\n            <button\n              @click=\"prevPage\"\n              :disabled=\"props.currentPage === 1\"\n              class=\"w-10 h-10 rounded-full flex items-center justify-center transition-colors\"\n              :class=\"props.currentPage === 1\n                ? 'text-gray-300 bg-gray-100 cursor-not-allowed'\n                : 'text-gray-600 bg-white hover:bg-gray-50 border border-gray-300 hover:border-gray-400'\"\n            >\n              <font-awesome-icon :icon=\"['fas', 'chevron-left']\" />\n            </button>\n\n            <!-- 页码指示器 -->\n            <div class=\"flex items-center gap-1\">\n              <template v-for=\"page in displayedPageRange\" :key=\"page\">\n                <button\n                  v-if=\"page !== '...'\"\n                  @click=\"goToPage(page)\"\n                  class=\"w-10 h-10 rounded-full flex items-center justify-center text-sm font-medium transition-colors\"\n                  :class=\"page === props.currentPage\n                    ? 'bg-primary text-white'\n                    : 'text-gray-600 bg-white hover:bg-gray-50 border border-gray-300 hover:border-gray-400'\"\n                >\n                  {{ page }}\n                </button>\n                <span\n                  v-else\n                  class=\"w-10 h-10 rounded-full flex items-center justify-center text-gray-500\"\n                >\n                  {{ page }}\n                </span>\n              </template>\n            </div>\n\n            <!-- 下一页按钮 -->\n            <button\n              @click=\"nextPage\"\n              :disabled=\"props.currentPage === totalPages\"\n              class=\"w-10 h-10 rounded-full flex items-center justify-center transition-colors\"\n              :class=\"props.currentPage === totalPages\n                ? 'text-gray-300 bg-gray-100 cursor-not-allowed'\n                : 'text-gray-600 bg-white hover:bg-gray-50 border border-gray-300 hover:border-gray-400'\"\n            >\n              <font-awesome-icon :icon=\"['fas', 'chevron-right']\" />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 空状态 -->\n      <div v-else class=\"text-center py-12\">\n        <div class=\"w-24 h-24 rounded-2xl bg-gradient-to-br from-indigo-100/80 to-purple-100/50 backdrop-blur-sm flex items-center justify-center mx-auto mb-6 shadow-lg border border-indigo-100/50\">\n          <font-awesome-icon :icon=\"['fas', 'heart-broken']\" class=\"text-indigo-500 text-3xl\" />\n        </div>\n        <h3 class=\"text-xl font-bold text-gray-800 mb-2\">暂无搭配</h3>\n        <p class=\"text-gray-500 max-w-md mx-auto mb-6\">\n          您还没有保存任何搭配方案，点击下方按钮创建您的第一套搭配。\n        </p>\n        <button\n          @click=\"$emit('scroll-to-create')\"\n          class=\"inline-flex items-center gap-2 px-6 py-3 bg-primary hover:bg-primary/90 text-white font-medium rounded-lg transition-colors shadow-md hover:shadow-lg\"\n        >\n          <font-awesome-icon :icon=\"['fas', 'plus']\" />\n          <span>创建搭配</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, computed, watch } from 'vue'\nimport OutfitCard from './OutfitCard.vue'\n\n// Props定义\nconst props = defineProps({\n  savedOutfits: {\n    type: Array,\n    default: () => []\n  },\n  currentPage: {\n    type: Number,\n    default: 1\n  },\n  itemsPerPage: {\n    type: Number,\n    default: 8\n  }\n})\n\n// 事件定义\nconst emit = defineEmits(['load-outfit', 'delete-outfit', 'share-outfit', 'page-change', 'scroll-to-create'])\n\n// 计算当前页要显示的搭配\nconst currentPageOutfits = computed(() => {\n  // 如果处于展开状态，显示双倍数量的卡片\n  const itemsToShow = expandedDisplay.value ? props.itemsPerPage * 2 : props.itemsPerPage\n  const start = (props.currentPage - 1) * props.itemsPerPage\n  const end = start + itemsToShow\n  // 使用已经过滤后的搭配数据\n  return filteredOutfits.value.slice(start, end)\n})\n\n// 搜索和筛选状态\nconst searchQuery = ref('')\nconst showFilterPanel = ref(false)\n\n// 显示模式状态\nconst expandedDisplay = ref(false)\n\n// 当前编辑的卡片ID\nconst editingOutfitId = ref(null)\n\nconst filters = ref({\n  scene: [],\n  season: [],\n  style: []\n})\nconst appliedFilters = ref({\n  scene: [],\n  season: [],\n  style: []\n})\n\n// 筛选选项\nconst sceneOptions = [\n  { value: 'daily', label: '日常' },\n  { value: 'work', label: '工作' },\n  { value: 'party', label: '聚会' },\n  { value: 'date', label: '约会' },\n  { value: 'travel', label: '旅行' },\n  { value: 'sports', label: '运动' }\n]\n\nconst seasonOptions = [\n  { value: 'spring', label: '春季' },\n  { value: 'summer', label: '夏季' },\n  { value: 'autumn', label: '秋季' },\n  { value: 'winter', label: '冬季' }\n]\n\nconst styleOptions = [\n  { value: 'casual', label: '休闲' },\n  { value: 'formal', label: '正式' },\n  { value: 'business', label: '商务' },\n  { value: 'street', label: '街头' },\n  { value: 'vintage', label: '复古' },\n  { value: 'minimalist', label: '极简' }\n]\n\n// 获取季节标签\nfunction getSeasonLabel(value) {\n  const season = seasonOptions.find(option => option.value === value)\n  return season ? season.label : value\n}\n\n// 获取风格标签\nfunction getStyleLabel(value) {\n  const style = styleOptions.find(option => option.value === value)\n  return style ? style.label : value\n}\n\n// 过滤搭配列表\nconst filteredOutfits = computed(() => {\n  return props.savedOutfits.filter(outfit => {\n    // 搜索过滤\n    const matchesSearch = searchQuery.value === '' ||\n      outfit.name.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\n      (outfit.scene && outfit.scene.toLowerCase().includes(searchQuery.value.toLowerCase())) ||\n      (outfit.season && getSeasonLabel(outfit.season).toLowerCase().includes(searchQuery.value.toLowerCase())) ||\n      (outfit.style && getStyleLabel(outfit.style).toLowerCase().includes(searchQuery.value.toLowerCase()))\n\n    // 筛选条件过滤\n    const matchesScene = appliedFilters.value.scene.length === 0 ||\n      (outfit.scene && appliedFilters.value.scene.includes(outfit.scene))\n\n    const matchesSeason = appliedFilters.value.season.length === 0 ||\n      (outfit.season && appliedFilters.value.season.includes(outfit.season))\n\n    const matchesStyle = appliedFilters.value.style.length === 0 ||\n      (outfit.style && appliedFilters.value.style.includes(outfit.style))\n\n    return matchesSearch && matchesScene && matchesSeason && matchesStyle\n  })\n})\n\n// 计算总页数\nconst totalPages = computed(() => {\n  // 根据展开状态计算总页数\n  const itemsPerPage = expandedDisplay.value ? props.itemsPerPage * 2 : props.itemsPerPage\n  return Math.ceil(filteredOutfits.value.length / itemsPerPage)\n})\n\n// 计算显示的页码范围\nconst displayedPageRange = computed(() => {\n  const current = props.currentPage\n  const total = totalPages.value\n  const delta = 2 // 当前页前后显示的页码数\n\n  if (total <= 7) {\n    // 如果总页数小于等于7，全部显示\n    return Array.from({ length: total }, (_, i) => i + 1)\n  }\n\n  const range = []\n  const hasLeftSpill = current > delta + 1\n  const hasRightSpill = current < total - delta\n\n  if (hasLeftSpill && !hasRightSpill) {\n    // 右边不溢出\n    const start = total - 5\n    for (let i = start; i <= total; i++) {\n      range.push(i)\n    }\n    range.unshift('...')\n    range.unshift(1)\n  } else if (!hasLeftSpill && hasRightSpill) {\n    // 左边不溢出\n    for (let i = 1; i <= 5; i++) {\n      range.push(i)\n    }\n    range.push('...')\n    range.push(total)\n  } else if (hasLeftSpill && hasRightSpill) {\n    // 两边都溢出\n    range.push(1)\n    range.push('...')\n    for (let i = current - delta; i <= current + delta; i++) {\n      range.push(i)\n    }\n    range.push('...')\n    range.push(total)\n  } else {\n    // 都不溢出\n    for (let i = 1; i <= total; i++) {\n      range.push(i)\n    }\n  }\n\n  return range\n})\n\n// 计算激活的筛选器数量\nconst activeFiltersCount = computed(() => {\n  return appliedFilters.value.scene.length +\n         appliedFilters.value.season.length +\n         appliedFilters.value.style.length\n})\n\n// 切换筛选面板\nfunction toggleFilterPanel() {\n  showFilterPanel.value = !showFilterPanel.value\n}\n\n// 切换筛选条件\nfunction toggleFilter(type, value) {\n  const index = filters.value[type].indexOf(value)\n  if (index === -1) {\n    filters.value[type].push(value)\n  } else {\n    filters.value[type].splice(index, 1)\n  }\n}\n\n// 应用筛选\nfunction applyFilters() {\n  // 深拷贝筛选条件\n  appliedFilters.value = {\n    scene: [...filters.value.scene],\n    season: [...filters.value.season],\n    style: [...filters.value.style]\n  }\n\n  // 关闭筛选面板\n  showFilterPanel.value = false\n\n  // 重置到第一页\n  if (props.currentPage !== 1) {\n    emit('page-change', 1)\n  }\n}\n\n// 清除筛选\nfunction clearFilters() {\n  filters.value = {\n    scene: [],\n    season: [],\n    style: []\n  }\n  appliedFilters.value = {\n    scene: [],\n    season: [],\n    style: []\n  }\n}\n\n// 切换显示模式\nfunction toggleDisplayMode() {\n  expandedDisplay.value = !expandedDisplay.value\n\n  // 如果切换为展开模式且当前页没有足够的内容，则返回第一页\n  if (expandedDisplay.value && currentPageOutfits.value.length < props.itemsPerPage) {\n    emit('page-change', 1)\n  }\n}\n\n// 分页操作\nfunction prevPage() {\n  if (props.currentPage > 1) {\n    emit('page-change', props.currentPage - 1)\n  }\n}\n\nfunction nextPage() {\n  if (props.currentPage < totalPages.value) {\n    emit('page-change', props.currentPage + 1)\n  }\n}\n\nfunction goToPage(page) {\n  if (page !== props.currentPage) {\n    emit('page-change', page)\n  }\n}\n\n// 处理搭配删除\nfunction handleDeleteOutfit(outfitId) {\n  emit('delete-outfit', outfitId)\n\n  // 如果当前页没有内容了，返回上一页\n  if (currentPageOutfits.value.length === 1 && props.currentPage > 1) {\n    emit('page-change', props.currentPage - 1)\n  }\n}\n\n// 处理搭配编辑\nfunction handleEditOutfit(updatedOutfit) {\n  emit('edit-outfit', updatedOutfit)\n}\n\n// 点击外部关闭筛选面板\nconst handleClickOutside = (event) => {\n  const filterPanel = document.querySelector('.relative')\n  if (showFilterPanel.value && filterPanel && !filterPanel.contains(event.target)) {\n    showFilterPanel.value = false\n  }\n}\n\n// 监听点击事件\nwatch(showFilterPanel, (newValue) => {\n  if (newValue) {\n    setTimeout(() => {\n      document.addEventListener('click', handleClickOutside)\n    }, 0)\n  } else {\n    document.removeEventListener('click', handleClickOutside)\n  }\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}