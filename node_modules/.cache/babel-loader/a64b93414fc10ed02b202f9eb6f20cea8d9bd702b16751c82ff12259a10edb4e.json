{"ast":null,"code":"import { ref, computed, watch, onMounted, onUnmounted } from 'vue';\nimport { useInspirationStore } from '@/stores/inspirationStore';\nimport OutfitCard from './OutfitCard.vue';\nimport { scenesMockData, seasonsMockData, stylesMockData } from '../../mock/data';\nexport default {\n  __name: 'SavedOutfits',\n  emits: ['load-outfit', 'delete-outfit', 'share-outfit', 'load-more', 'scroll-to-create'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const inspirationStore = useInspirationStore();\n\n    // 从store获取数据\n    const {\n      savedOutfits,\n      visibleOutfits,\n      hasMore,\n      isLoading\n    } = inspirationStore;\n\n    // 事件定义\n    const emit = __emit;\n\n    // 从store获取筛选相关数据\n    const searchQuery = computed(() => inspirationStore.filters.search);\n    const showFilterPanel = ref(false);\n    const filters = computed(() => inspirationStore.filters);\n    const appliedFilters = ref({\n      scene: [],\n      season: [],\n      style: []\n    });\n\n    // 筛选选项\n    const sceneOptions = [{\n      value: 'daily',\n      label: '日常'\n    }, {\n      value: 'work',\n      label: '工作'\n    }, {\n      value: 'party',\n      label: '聚会'\n    }, {\n      value: 'date',\n      label: '约会'\n    }, {\n      value: 'travel',\n      label: '旅行'\n    }, {\n      value: 'sports',\n      label: '运动'\n    }];\n    const seasonOptions = seasonsMockData;\n    const styleOptions = stylesMockData;\n\n    // 计算过滤后的搭配\n    const filteredOutfits = computed(() => {\n      if (!savedOutfits.value || !Array.isArray(savedOutfits.value)) {\n        return [];\n      }\n      return savedOutfits.value.filter(outfit => {\n        // 基本过滤\n        if (!outfit || !outfit.id && !outfit.title) return false;\n\n        // 搜索过滤\n        if (searchQuery.value) {\n          const query = searchQuery.value.toLowerCase();\n          const nameMatch = outfit.title && outfit.title.toLowerCase().includes(query);\n          const sceneMatch = outfit.occasion && outfit.occasion.toLowerCase().includes(query);\n          const tagsMatch = outfit.tag && outfit.tag.toLowerCase().includes(query);\n          if (!nameMatch && !sceneMatch && !tagsMatch) return false;\n        }\n\n        // 筛选条件过滤\n        if (appliedFilters.value.scene.length > 0) {\n          if (!outfit.occasion || !appliedFilters.value.scene.includes(outfit.occasion.toLowerCase())) {\n            return false;\n          }\n        }\n        if (appliedFilters.value.season.length > 0) {\n          if (!outfit.season || !appliedFilters.value.season.includes(outfit.season.toLowerCase())) {\n            return false;\n          }\n        }\n        if (appliedFilters.value.style.length > 0) {\n          if (!outfit.style || !appliedFilters.value.style.includes(outfit.style.toLowerCase())) {\n            return false;\n          }\n        }\n        return true;\n      });\n    });\n\n    // 监听筛选变化\n    watch([filteredOutfits], () => {\n      // 筛选变化时的逻辑可以在这里添加\n    });\n\n    // 格式化日期\n    function formatDate(date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}/${(d.getMonth() + 1).toString().padStart(2, '0')}/${d.getDate().toString().padStart(2, '0')}`;\n    }\n\n    // 获取搭配衣物类型统计\n    function getOutfitStats(items) {\n      const stats = {};\n      items.forEach(item => {\n        // 提取类型（如\"上衣\"、\"裤子\"等）\n        const type = item.type.split(' · ')[0];\n        if (stats[type]) {\n          stats[type]++;\n        } else {\n          stats[type] = 1;\n        }\n      });\n      return stats;\n    }\n\n    // 获取搭配标签\n    function getOutfitTags(items) {\n      const tags = new Set();\n      items.forEach(item => {\n        if (item.tags && Array.isArray(item.tags)) {\n          item.tags.forEach(tag => tags.add(tag));\n        }\n      });\n      return Array.from(tags);\n    }\n\n    // 处理删除搭配事件\n    function handleDeleteOutfit(outfitId) {\n      if (!savedOutfits.value || !Array.isArray(savedOutfits.value)) return;\n\n      // 找到搭配在数组中的索引\n      const index = savedOutfits.value.findIndex(outfit => outfit.id === outfitId);\n      if (index !== -1) {\n        emit('delete-outfit', index);\n      }\n    }\n\n    // 处理编辑搭配事件\n    function handleEditOutfit(editedOutfit) {\n      if (!savedOutfits.value || !Array.isArray(savedOutfits.value)) return;\n\n      // 找到搭配在数组中的索引\n      const index = savedOutfits.value.findIndex(outfit => outfit.id === editedOutfit.id);\n      if (index !== -1) {\n        // 更新搭配信息\n        const updatedOutfit = {\n          ...savedOutfits.value[index],\n          name: editedOutfit.name,\n          scene: editedOutfit.scene\n        };\n        // 发送编辑事件\n        emit('edit-outfit', {\n          index,\n          outfit: updatedOutfit\n        });\n      }\n    }\n\n    // 获取随机点赞数（模拟）\n    function getRandomLikes() {\n      return Math.floor(Math.random() * 100) + 1;\n    }\n\n    // 获取随机评论数（模拟）\n    function getRandomComments() {\n      return Math.floor(Math.random() * 20) + 1;\n    }\n\n    // 筛选和搜索功能方法\n    // 切换筛选面板显示\n    function toggleFilterPanel() {\n      showFilterPanel.value = !showFilterPanel.value;\n    }\n\n    // 切换筛选条件\n    function toggleFilter(type, value) {\n      const index = filters.value[type].indexOf(value);\n      if (index > -1) {\n        filters.value[type].splice(index, 1);\n      } else {\n        filters.value[type].push(value);\n      }\n    }\n\n    // 应用筛选\n    function applyFilters() {\n      // 深拷贝当前筛选条件\n      appliedFilters.value = {\n        scene: [...filters.value.scene],\n        season: [...filters.value.season],\n        style: [...filters.value.style]\n      };\n      // 关闭筛选面板\n      showFilterPanel.value = false;\n    }\n\n    // 重置筛选\n    function resetFilters() {\n      filters.value = {\n        scene: [],\n        season: [],\n        style: []\n      };\n      appliedFilters.value = {\n        scene: [],\n        season: [],\n        style: []\n      };\n    }\n\n    // 移除单个筛选条件\n    function removeFilter(type, value) {\n      const index = appliedFilters.value[type].indexOf(value);\n      if (index > -1) {\n        appliedFilters.value[type].splice(index, 1);\n        // 同步更新当前筛选面板中的状态\n        const filterIndex = filters.value[type].indexOf(value);\n        if (filterIndex > -1) {\n          filters.value[type].splice(filterIndex, 1);\n        }\n      }\n    }\n\n    // 获取筛选条件标签\n    function getFilterLabel(type, value) {\n      let options = [];\n      switch (type) {\n        case 'scene':\n          options = sceneOptions;\n          break;\n        case 'season':\n          options = seasonOptions;\n          break;\n        case 'style':\n          options = styleOptions;\n          break;\n      }\n      const option = options.find(opt => opt.value === value);\n      return option ? option.label : value;\n    }\n\n    // 计算当前激活的筛选条件数量\n    const activeFiltersCount = computed(() => {\n      return appliedFilters.value.scene.length + appliedFilters.value.season.length + appliedFilters.value.style.length;\n    });\n\n    // 激活的筛选标签\n    const activeFilters = computed(() => {\n      const result = {\n        scene: appliedFilters.value.scene || [],\n        season: appliedFilters.value.season || [],\n        style: appliedFilters.value.style || []\n      };\n      return result;\n    });\n    const __returned__ = {\n      inspirationStore,\n      savedOutfits,\n      visibleOutfits,\n      hasMore,\n      isLoading,\n      emit,\n      searchQuery,\n      showFilterPanel,\n      filters,\n      appliedFilters,\n      sceneOptions,\n      seasonOptions,\n      styleOptions,\n      filteredOutfits,\n      formatDate,\n      getOutfitStats,\n      getOutfitTags,\n      handleDeleteOutfit,\n      handleEditOutfit,\n      getRandomLikes,\n      getRandomComments,\n      toggleFilterPanel,\n      toggleFilter,\n      applyFilters,\n      resetFilters,\n      removeFilter,\n      getFilterLabel,\n      activeFiltersCount,\n      activeFilters,\n      ref,\n      computed,\n      watch,\n      onMounted,\n      onUnmounted,\n      get useInspirationStore() {\n        return useInspirationStore;\n      },\n      OutfitCard,\n      get scenesMockData() {\n        return scenesMockData;\n      },\n      get seasonsMockData() {\n        return seasonsMockData;\n      },\n      get stylesMockData() {\n        return stylesMockData;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onUnmounted","useInspirationStore","OutfitCard","scenesMockData","seasonsMockData","stylesMockData","inspirationStore","savedOutfits","visibleOutfits","hasMore","isLoading","emit","__emit","searchQuery","filters","search","showFilterPanel","appliedFilters","scene","season","style","sceneOptions","value","label","seasonOptions","styleOptions","filteredOutfits","Array","isArray","filter","outfit","id","title","query","toLowerCase","nameMatch","includes","sceneMatch","occasion","tagsMatch","tag","length","formatDate","date","d","Date","getFullYear","getMonth","toString","padStart","getDate","getOutfitStats","items","stats","forEach","item","type","split","getOutfitTags","tags","Set","add","from","handleDeleteOutfit","outfitId","index","findIndex","handleEditOutfit","editedOutfit","updatedOutfit","name","getRandomLikes","Math","floor","random","getRandomComments","toggleFilterPanel","toggleFilter","indexOf","splice","push","applyFilters","resetFilters","removeFilter","filterIndex","getFilterLabel","options","option","find","opt","activeFiltersCount","activeFilters","result"],"sources":["/Users/sunxiaokai/Desktop/stylevault-vue-project/src/components/inspiration/SavedOutfits.vue"],"sourcesContent":["<template>\n  <div class=\"mb-12\">\n    <!-- 页面标题 - 异形背景设计 -->\n    <!-- 页面标题 - 调整为与内容区域协调的风格 -->\n    <div\n      class=\"relative py-16 px-6 mb-12 overflow-hidden rounded-2xl shadow-md bg-gradient-to-br from-indigo-50 via-white to-purple-50\"\n    >\n      <!-- 异形背景基础层 - 使用clip-path创建流动形状 -->\n      <div\n        class=\"absolute inset-0 -z-10 bg-gradient-to-br from-indigo-50 via-white to-purple-50\"\n        style=\"clip-path: polygon(0 0, 100% 0, 100% 85%, 85% 100%, 15% 100%, 0 85%)\"\n      ></div>\n\n      <!-- 异形背景装饰层1 - 增强流动感 -->\n      <div\n        class=\"absolute inset-0 -z-20 opacity-40 bg-gradient-to-br from-primary/10 via-white to-secondary/10\"\n        style=\"clip-path: polygon(0 5%, 100% 0, 100% 80%, 90% 100%, 10% 100%, 0 80%)\"\n      ></div>\n\n      <!-- 异形背景装饰层2 - 创造层次感 -->\n      <div\n        class=\"absolute inset-x-0 top-0 h-32 -z-30 opacity-30 bg-gradient-to-r from-primary/20 via-transparent to-secondary/20\"\n        style=\"clip-path: polygon(0 0, 100% 0, 85% 100%, 15% 100%)\"\n      ></div>\n\n      <!-- 装饰性椭圆元素 - 增强视觉层次 -->\n      <div\n        class=\"absolute -top-32 -right-32 w-80 h-80 bg-primary/5 rounded-full blur-3xl animate-pulse-slow\"\n      ></div>\n      <div\n        class=\"absolute -bottom-32 -left-32 w-80 h-80 bg-secondary/5 rounded-full blur-3xl animate-pulse-slow\"\n        style=\"animation-delay: 1s\"\n      ></div>\n\n      <!-- 动态装饰点 - 增加灵动性 -->\n      <div class=\"absolute top-1/4 right-1/4 w-3 h-3 bg-primary rounded-full animate-ping\"></div>\n      <div\n        class=\"absolute bottom-1/4 left-1/4 w-3 h-3 bg-secondary rounded-full animate-ping\"\n        style=\"animation-delay: 0.7s\"\n      ></div>\n\n      <!-- 标题容器 -->\n      <div class=\"text-center max-w-4xl mx-auto relative group\">\n        <!-- 装饰线条 -->\n        <div class=\"flex items-center justify-center space-x-4 mb-6\">\n          <span class=\"h-[1px] w-16 bg-gradient-to-r from-transparent to-primary/30\"></span>\n          <span class=\"text-primary/70 text-sm uppercase tracking-widest font-medium\">\n            Style Vault\n          </span>\n          <span class=\"h-[1px] w-16 bg-gradient-to-r from-primary/30 to-transparent\"></span>\n        </div>\n\n        <!-- 标题文字 -->\n        <h1 class=\"text-3xl md:text-4xl lg:text-5xl font-bold mb-4 tracking-tight inline-block\">\n          <!-- 主标题文本 - 柔和渐变效果 -->\n          <span\n            class=\"bg-clip-text text-transparent bg-gradient-to-r from-primary via-primary-dark to-secondary\"\n          >\n            我的时尚灵感\n          </span>\n        </h1>\n\n        <!-- 副标题 -->\n        <p class=\"text-neutral-600 max-w-2xl mx-auto text-lg leading-relaxed mb-8\">\n          探索和创建完美的服装搭配，展现你的个人风格。从已有的衣物中寻找灵感，打造独特造型。\n        </p>\n\n        <!-- 底部装饰元素 - 呼应异形背景 -->\n        <div\n          class=\"absolute -bottom-6 left-1/4 right-1/4 h-3 bg-gradient-to-r from-transparent via-primary/20 to-transparent\"\n          style=\"clip-path: polygon(0 50%, 100% 50%, 85% 100%, 15% 100%)\"\n        ></div>\n      </div>\n    </div>\n\n    <!-- 已保存搭配区域 -->\n    <div class=\"mb-12\">\n      <div class=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-6 gap-4\">\n        <div class=\"flex items-center\">\n          <h2 class=\"text-2xl font-bold flex items-center\">\n            <font-awesome-icon :icon=\"['fas', 'heart']\" class=\"text-primary mr-2\" />\n            我的搭配\n          </h2>\n          <span class=\"bg-primary/10 text-primary px-3 py-1 rounded-full text-sm font-medium ml-3\">\n            {{ savedOutfits.length }}套方案\n          </span>\n        </div>\n\n        <!-- 搜索和筛选区域 -->\n        <div class=\"flex flex-col md:flex-row gap-3 w-full md:w-auto\">\n          <!-- 搜索框 -->\n          <div class=\"relative w-full md:w-64\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <font-awesome-icon :icon=\"['fas', 'search']\" class=\"text-gray-400\" />\n            </div>\n            <input\n              v-model=\"searchQuery\"\n              type=\"text\"\n              class=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary text-sm\"\n              placeholder=\"搜索搭配名称或标签...\"\n            />\n          </div>\n\n          <!-- 筛选按钮 -->\n          <div class=\"relative\">\n            <button\n              @click=\"toggleFilterPanel\"\n              class=\"flex items-center gap-2 px-4 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary text-sm transition-colors\"\n            >\n              <font-awesome-icon :icon=\"['fas', 'filter']\" />\n              <span>筛选</span>\n              <span\n                v-if=\"activeFiltersCount > 0\"\n                class=\"bg-primary text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\"\n              >\n                {{ activeFiltersCount }}\n              </span>\n            </button>\n\n            <!-- 筛选面板 -->\n            <div\n              v-if=\"showFilterPanel\"\n              class=\"absolute right-0 mt-2 w-80 bg-white rounded-xl shadow-lg border border-gray-200 z-20 p-5\"\n            >\n              <div class=\"flex justify-between items-center mb-4\">\n                <h3 class=\"font-medium text-gray-900\">筛选条件</h3>\n                <button @click=\"resetFilters\" class=\"text-sm text-primary hover:text-primary/80\">\n                  重置\n                </button>\n              </div>\n\n              <!-- 场景筛选 -->\n              <div class=\"mb-5\">\n                <h4 class=\"text-sm font-medium text-gray-700 mb-2\">场景</h4>\n                <div class=\"flex flex-wrap gap-2\">\n                  <button\n                    v-for=\"scene in sceneOptions\"\n                    :key=\"scene.value\"\n                    @click=\"toggleFilter('scene', scene.value)\"\n                    class=\"px-3 py-1.5 text-xs rounded-full transition-colors\"\n                    :class=\"\n                      filters.scene.includes(scene.value)\n                        ? 'bg-primary text-white'\n                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                    \"\n                  >\n                    {{ scene.label }}\n                  </button>\n                </div>\n              </div>\n\n              <!-- 季节筛选 -->\n              <div class=\"mb-5\">\n                <h4 class=\"text-sm font-medium text-gray-700 mb-2\">季节</h4>\n                <div class=\"flex flex-wrap gap-2\">\n                  <button\n                    v-for=\"season in seasonOptions\"\n                    :key=\"season.value\"\n                    @click=\"toggleFilter('season', season.value)\"\n                    class=\"px-3 py-1.5 text-xs rounded-full transition-colors\"\n                    :class=\"\n                      filters.season.includes(season.value)\n                        ? 'bg-primary text-white'\n                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                    \"\n                  >\n                    {{ season.label }}\n                  </button>\n                </div>\n              </div>\n\n              <!-- 风格筛选 -->\n              <div class=\"mb-5\">\n                <h4 class=\"text-sm font-medium text-gray-700 mb-2\">风格</h4>\n                <div class=\"flex flex-wrap gap-2\">\n                  <button\n                    v-for=\"style in styleOptions\"\n                    :key=\"style.value\"\n                    @click=\"toggleFilter('style', style.value)\"\n                    class=\"px-3 py-1.5 text-xs rounded-full transition-colors\"\n                    :class=\"\n                      filters.style.includes(style.value)\n                        ? 'bg-primary text-white'\n                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                    \"\n                  >\n                    {{ style.label }}\n                  </button>\n                </div>\n              </div>\n\n              <!-- 应用筛选按钮 -->\n              <button\n                @click=\"applyFilters\"\n                class=\"w-full bg-primary hover:bg-primary/90 text-white font-medium py-2 rounded-lg transition-colors mt-2\"\n              >\n                应用筛选\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 当前筛选条件显示 -->\n      <div v-if=\"activeFiltersCount > 0\" class=\"mb-6 flex flex-wrap gap-2\">\n        <span class=\"text-sm text-gray-600\">当前筛选:</span>\n        <div v-for=\"(filter, type) in activeFilters\" :key=\"type\" class=\"flex flex-wrap gap-2\">\n          <span\n            v-for=\"value in filter\"\n            :key=\"value\"\n            class=\"inline-flex items-center gap-1 px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\"\n          >\n            {{ getFilterLabel(type, value) }}\n            <button @click=\"removeFilter(type, value)\" class=\"hover:text-primary/80\">\n              <font-awesome-icon :icon=\"['fas', 'times']\" class=\"text-xs\" />\n            </button>\n          </span>\n        </div>\n      </div>\n\n      <div class=\"bg-white rounded-2xl p-6 shadow-md relative overflow-hidden\">\n        <!-- 装饰元素 -->\n        <div class=\"absolute -top-12 -right-12 w-40 h-40 bg-primary/5 rounded-full\"></div>\n        <div class=\"absolute -bottom-20 -left-20 w-60 h-60 bg-secondary/5 rounded-full\"></div>\n\n        <!-- 已保存搭配列表 -->\n        <div v-if=\"visibleOutfits.length > 0\" class=\"relative z-10\">\n          <!-- 搭配卡片自适应网格布局 -->\n          <div class=\"grid gap-6 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\n            <OutfitCard\n              v-for=\"outfit in visibleOutfits\"\n              :key=\"outfit.id\"\n              :outfit=\"outfit\"\n              @load-outfit=\"$emit('load-outfit', $event)\"\n              @delete-outfit=\"handleDeleteOutfit\"\n              @edit-outfit=\"handleEditOutfit\"\n            />\n          </div>\n\n          <!-- 加载更多按钮 -->\n          <div v-if=\"hasMore\" class=\"flex justify-center mt-8\">\n            <button\n              @click=\"loadMore\"\n              :disabled=\"isLoading\"\n              class=\"flex items-center gap-2 px-6 py-3 bg-primary hover:bg-primary/90 text-white rounded-lg transition-colors disabled:opacity-50\"\n            >\n              <font-awesome-icon\n                :icon=\"['fas', isLoading ? 'spinner' : 'plus']\"\n                :class=\"{ 'animate-spin': isLoading }\"\n              />\n              {{ isLoading ? '加载中...' : '加载更多' }}\n            </button>\n          </div>\n        </div>\n\n        <!-- 空状态 - 增强视觉吸引力 -->\n        <div\n          v-else\n          class=\"text-center py-20 border border-dashed border-neutral-200 rounded-xl relative z-10 bg-gradient-to-b from-white to-neutral-50 max-w-2xl mx-auto\"\n        >\n          <!-- 装饰元素 -->\n          <div class=\"absolute -top-6 -right-6 w-24 h-24 bg-primary/5 rounded-full blur-xl\"></div>\n          <div\n            class=\"absolute -bottom-6 -left-6 w-24 h-24 bg-secondary/5 rounded-full blur-xl\"\n          ></div>\n\n          <div\n            class=\"w-24 h-24 rounded-full bg-gradient-to-br from-primary/10 to-secondary/10 flex items-center justify-center mx-auto mb-6 transform transition-all duration-500 hover:scale-110\"\n          >\n            <font-awesome-icon :icon=\"['fas', 'heart']\" class=\"text-primary text-3xl\" />\n          </div>\n          <p class=\"text-neutral-600 text-lg mb-3 font-medium\">暂无保存的搭配方案</p>\n          <p class=\"text-neutral-400 text-sm mb-8 max-w-sm mx-auto\">\n            创建您的第一套搭配方案，开始记录和探索您的时尚灵感\n          </p>\n          <button\n            @click=\"$emit('scroll-to-create')\"\n            class=\"bg-gradient-to-r from-primary to-secondary hover:from-primary/90 hover:to-secondary/90 text-white font-medium py-3 px-8 rounded-xl transition-all duration-300 transform hover:scale-105 shadow-md hover:shadow-lg active:scale-95\"\n          >\n            开始创建\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref, computed, watch, onMounted, onUnmounted } from 'vue';\n  import { useInspirationStore } from '@/stores/inspirationStore';\n  import OutfitCard from './OutfitCard.vue';\n  import { scenesMockData, seasonsMockData, stylesMockData } from '../../mock/data';\n\n  const inspirationStore = useInspirationStore();\n\n  // 从store获取数据\n  const { savedOutfits, visibleOutfits, hasMore, isLoading } = inspirationStore;\n\n  // 事件定义\n  const emit = defineEmits([\n    'load-outfit',\n    'delete-outfit',\n    'share-outfit',\n    'load-more',\n    'scroll-to-create',\n  ]);\n\n  // 从store获取筛选相关数据\n  const searchQuery = computed(() => inspirationStore.filters.search);\n  const showFilterPanel = ref(false);\n\n  const filters = computed(() => inspirationStore.filters);\n  const appliedFilters = ref({\n    scene: [],\n    season: [],\n    style: [],\n  });\n\n  // 筛选选项\n  const sceneOptions = [\n    { value: 'daily', label: '日常' },\n    { value: 'work', label: '工作' },\n    { value: 'party', label: '聚会' },\n    { value: 'date', label: '约会' },\n    { value: 'travel', label: '旅行' },\n    { value: 'sports', label: '运动' },\n  ];\n\n  const seasonOptions = seasonsMockData;\n\n  const styleOptions = stylesMockData;\n\n  // 计算过滤后的搭配\n  const filteredOutfits = computed(() => {\n    if (!savedOutfits.value || !Array.isArray(savedOutfits.value)) {\n      return [];\n    }\n    return savedOutfits.value.filter(outfit => {\n      // 基本过滤\n      if (!outfit || (!outfit.id && !outfit.title)) return false;\n\n      // 搜索过滤\n      if (searchQuery.value) {\n        const query = searchQuery.value.toLowerCase();\n        const nameMatch = outfit.title && outfit.title.toLowerCase().includes(query);\n        const sceneMatch = outfit.occasion && outfit.occasion.toLowerCase().includes(query);\n        const tagsMatch = outfit.tag && outfit.tag.toLowerCase().includes(query);\n\n        if (!nameMatch && !sceneMatch && !tagsMatch) return false;\n      }\n\n      // 筛选条件过滤\n      if (appliedFilters.value.scene.length > 0) {\n        if (\n          !outfit.occasion ||\n          !appliedFilters.value.scene.includes(outfit.occasion.toLowerCase())\n        ) {\n          return false;\n        }\n      }\n\n      if (appliedFilters.value.season.length > 0) {\n        if (!outfit.season || !appliedFilters.value.season.includes(outfit.season.toLowerCase())) {\n          return false;\n        }\n      }\n\n      if (appliedFilters.value.style.length > 0) {\n        if (!outfit.style || !appliedFilters.value.style.includes(outfit.style.toLowerCase())) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  });\n\n  // 监听筛选变化\n  watch([filteredOutfits], () => {\n    // 筛选变化时的逻辑可以在这里添加\n  });\n\n  // 格式化日期\n  function formatDate(date) {\n    const d = new Date(date);\n    return `${d.getFullYear()}/${(d.getMonth() + 1).toString().padStart(2, '0')}/${d\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n  }\n\n  // 获取搭配衣物类型统计\n  function getOutfitStats(items) {\n    const stats = {};\n    items.forEach(item => {\n      // 提取类型（如\"上衣\"、\"裤子\"等）\n      const type = item.type.split(' · ')[0];\n      if (stats[type]) {\n        stats[type]++;\n      } else {\n        stats[type] = 1;\n      }\n    });\n    return stats;\n  }\n\n  // 获取搭配标签\n  function getOutfitTags(items) {\n    const tags = new Set();\n    items.forEach(item => {\n      if (item.tags && Array.isArray(item.tags)) {\n        item.tags.forEach(tag => tags.add(tag));\n      }\n    });\n    return Array.from(tags);\n  }\n\n  // 处理删除搭配事件\n  function handleDeleteOutfit(outfitId) {\n    if (!savedOutfits.value || !Array.isArray(savedOutfits.value)) return;\n\n    // 找到搭配在数组中的索引\n    const index = savedOutfits.value.findIndex(outfit => outfit.id === outfitId);\n    if (index !== -1) {\n      emit('delete-outfit', index);\n    }\n  }\n\n  // 处理编辑搭配事件\n  function handleEditOutfit(editedOutfit) {\n    if (!savedOutfits.value || !Array.isArray(savedOutfits.value)) return;\n\n    // 找到搭配在数组中的索引\n    const index = savedOutfits.value.findIndex(outfit => outfit.id === editedOutfit.id);\n    if (index !== -1) {\n      // 更新搭配信息\n      const updatedOutfit = {\n        ...savedOutfits.value[index],\n        name: editedOutfit.name,\n        scene: editedOutfit.scene,\n      };\n      // 发送编辑事件\n      emit('edit-outfit', { index, outfit: updatedOutfit });\n    }\n  }\n\n  // 获取随机点赞数（模拟）\n  function getRandomLikes() {\n    return Math.floor(Math.random() * 100) + 1;\n  }\n\n  // 获取随机评论数（模拟）\n  function getRandomComments() {\n    return Math.floor(Math.random() * 20) + 1;\n  }\n\n  // 筛选和搜索功能方法\n  // 切换筛选面板显示\n  function toggleFilterPanel() {\n    showFilterPanel.value = !showFilterPanel.value;\n  }\n\n  // 切换筛选条件\n  function toggleFilter(type, value) {\n    const index = filters.value[type].indexOf(value);\n    if (index > -1) {\n      filters.value[type].splice(index, 1);\n    } else {\n      filters.value[type].push(value);\n    }\n  }\n\n  // 应用筛选\n  function applyFilters() {\n    // 深拷贝当前筛选条件\n    appliedFilters.value = {\n      scene: [...filters.value.scene],\n      season: [...filters.value.season],\n      style: [...filters.value.style],\n    };\n    // 关闭筛选面板\n    showFilterPanel.value = false;\n  }\n\n  // 重置筛选\n  function resetFilters() {\n    filters.value = {\n      scene: [],\n      season: [],\n      style: [],\n    };\n    appliedFilters.value = {\n      scene: [],\n      season: [],\n      style: [],\n    };\n  }\n\n  // 移除单个筛选条件\n  function removeFilter(type, value) {\n    const index = appliedFilters.value[type].indexOf(value);\n    if (index > -1) {\n      appliedFilters.value[type].splice(index, 1);\n      // 同步更新当前筛选面板中的状态\n      const filterIndex = filters.value[type].indexOf(value);\n      if (filterIndex > -1) {\n        filters.value[type].splice(filterIndex, 1);\n      }\n    }\n  }\n\n  // 获取筛选条件标签\n  function getFilterLabel(type, value) {\n    let options = [];\n    switch (type) {\n      case 'scene':\n        options = sceneOptions;\n        break;\n      case 'season':\n        options = seasonOptions;\n        break;\n      case 'style':\n        options = styleOptions;\n        break;\n    }\n\n    const option = options.find(opt => opt.value === value);\n    return option ? option.label : value;\n  }\n\n  // 计算当前激活的筛选条件数量\n  const activeFiltersCount = computed(() => {\n    return (\n      appliedFilters.value.scene.length +\n      appliedFilters.value.season.length +\n      appliedFilters.value.style.length\n    );\n  });\n\n  // 激活的筛选标签\n  const activeFilters = computed(() => {\n    const result = {\n      scene: appliedFilters.value.scene || [],\n      season: appliedFilters.value.season || [],\n      style: appliedFilters.value.style || [],\n    };\n    return result;\n  });\n</script>\n\n<style scoped>\n  /* 自定义滚动条样式 */\n  .scrollbar-thin::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  .scrollbar-thin::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  .scrollbar-thin::-webkit-scrollbar-thumb {\n    background: rgba(0, 0, 0, 0.1);\n    border-radius: 2px;\n  }\n\n  .scrollbar-thin::-webkit-scrollbar-thumb:hover {\n    background: rgba(0, 0, 0, 0.2);\n  }\n\n  /* 悬停动画增强 */\n  .group:hover .text-primary {\n    color: theme('colors.primary', #3b82f6);\n  }\n\n  /* 卡片悬停效果增强 */\n  .shadow-md {\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05), 0 2px 4px -1px rgba(0, 0, 0, 0.03);\n  }\n\n  .shadow-lg {\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.08), 0 4px 6px -2px rgba(0, 0, 0, 0.04);\n  }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}