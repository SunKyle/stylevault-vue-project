{"ast":null,"code":"import apiClient from './api';\nexport default class BaseService {\n  constructor(resourcePath) {\n    this.resourcePath = resourcePath;\n  }\n\n  // 通用请求方法\n  async request(config) {\n    try {\n      const response = await apiClient(config);\n      return response;\n    } catch (error) {\n      this.handleError(error, '请求失败');\n      throw error;\n    }\n  }\n\n  // 通用获取所有资源\n  async getAll(params = {}) {\n    try {\n      const response = await apiClient.get(`/${this.resourcePath}`, {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      this.handleError(error, '获取数据失败');\n      throw error;\n    }\n  }\n\n  // 通用获取单个资源\n  async getById(id) {\n    try {\n      const response = await apiClient.get(`/${this.resourcePath}/${id}`);\n      return response.data;\n    } catch (error) {\n      this.handleError(error, '获取详情失败');\n      throw error;\n    }\n  }\n\n  // 通用创建资源\n  async create(data) {\n    try {\n      const response = await apiClient.post(`/${this.resourcePath}`, data);\n      return response.data;\n    } catch (error) {\n      this.handleError(error, '创建失败');\n      throw error;\n    }\n  }\n\n  // 通用更新资源\n  async update(id, data) {\n    try {\n      const response = await apiClient.put(`/${this.resourcePath}/${id}`, data);\n      return response.data;\n    } catch (error) {\n      this.handleError(error, '更新失败');\n      throw error;\n    }\n  }\n\n  // 通用删除资源\n  async delete(id) {\n    try {\n      await apiClient.delete(`/${this.resourcePath}/${id}`);\n      return true;\n    } catch (error) {\n      this.handleError(error, '删除失败');\n      throw error;\n    }\n  }\n\n  // 通用错误处理\n  handleError(error, defaultMessage) {\n    console.error(defaultMessage, error);\n    // 可以在这里添加统一的错误提示逻辑\n  }\n}","map":{"version":3,"names":["apiClient","BaseService","constructor","resourcePath","request","config","response","error","handleError","getAll","params","get","data","getById","id","create","post","update","put","delete","defaultMessage","console"],"sources":["/Users/sunxiaokai/Desktop/stylevault-vue-project/src/services/baseService.js"],"sourcesContent":["import apiClient from './api';\n\nexport default class BaseService {\n  constructor(resourcePath) {\n    this.resourcePath = resourcePath;\n  }\n\n  // 通用请求方法\n  async request(config) {\n    try {\n      const response = await apiClient(config);\n      return response;\n    } catch (error) {\n      this.handleError(error, '请求失败');\n      throw error;\n    }\n  }\n\n  // 通用获取所有资源\n  async getAll(params = {}) {\n    try {\n      const response = await apiClient.get(`/${this.resourcePath}`, { params });\n      return response.data;\n    } catch (error) {\n      this.handleError(error, '获取数据失败');\n      throw error;\n    }\n  }\n\n  // 通用获取单个资源\n  async getById(id) {\n    try {\n      const response = await apiClient.get(`/${this.resourcePath}/${id}`);\n      return response.data;\n    } catch (error) {\n      this.handleError(error, '获取详情失败');\n      throw error;\n    }\n  }\n\n  // 通用创建资源\n  async create(data) {\n    try {\n      const response = await apiClient.post(`/${this.resourcePath}`, data);\n      return response.data;\n    } catch (error) {\n      this.handleError(error, '创建失败');\n      throw error;\n    }\n  }\n\n  // 通用更新资源\n  async update(id, data) {\n    try {\n      const response = await apiClient.put(`/${this.resourcePath}/${id}`, data);\n      return response.data;\n    } catch (error) {\n      this.handleError(error, '更新失败');\n      throw error;\n    }\n  }\n\n  // 通用删除资源\n  async delete(id) {\n    try {\n      await apiClient.delete(`/${this.resourcePath}/${id}`);\n      return true;\n    } catch (error) {\n      this.handleError(error, '删除失败');\n      throw error;\n    }\n  }\n\n  // 通用错误处理\n  handleError(error, defaultMessage) {\n    console.error(defaultMessage, error);\n    // 可以在这里添加统一的错误提示逻辑\n  }\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,OAAO;AAE7B,eAAe,MAAMC,WAAW,CAAC;EAC/BC,WAAWA,CAACC,YAAY,EAAE;IACxB,IAAI,CAACA,YAAY,GAAGA,YAAY;EAClC;;EAEA;EACA,MAAMC,OAAOA,CAACC,MAAM,EAAE;IACpB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACK,MAAM,CAAC;MACxC,OAAOC,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAI,CAACC,WAAW,CAACD,KAAK,EAAE,MAAM,CAAC;MAC/B,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAME,MAAMA,CAACC,MAAM,GAAG,CAAC,CAAC,EAAE;IACxB,IAAI;MACF,MAAMJ,QAAQ,GAAG,MAAMN,SAAS,CAACW,GAAG,CAAC,IAAI,IAAI,CAACR,YAAY,EAAE,EAAE;QAAEO;MAAO,CAAC,CAAC;MACzE,OAAOJ,QAAQ,CAACM,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAI,CAACC,WAAW,CAACD,KAAK,EAAE,QAAQ,CAAC;MACjC,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMM,OAAOA,CAACC,EAAE,EAAE;IAChB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMN,SAAS,CAACW,GAAG,CAAC,IAAI,IAAI,CAACR,YAAY,IAAIW,EAAE,EAAE,CAAC;MACnE,OAAOR,QAAQ,CAACM,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAI,CAACC,WAAW,CAACD,KAAK,EAAE,QAAQ,CAAC;MACjC,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMQ,MAAMA,CAACH,IAAI,EAAE;IACjB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMN,SAAS,CAACgB,IAAI,CAAC,IAAI,IAAI,CAACb,YAAY,EAAE,EAAES,IAAI,CAAC;MACpE,OAAON,QAAQ,CAACM,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAI,CAACC,WAAW,CAACD,KAAK,EAAE,MAAM,CAAC;MAC/B,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMU,MAAMA,CAACH,EAAE,EAAEF,IAAI,EAAE;IACrB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMN,SAAS,CAACkB,GAAG,CAAC,IAAI,IAAI,CAACf,YAAY,IAAIW,EAAE,EAAE,EAAEF,IAAI,CAAC;MACzE,OAAON,QAAQ,CAACM,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAI,CAACC,WAAW,CAACD,KAAK,EAAE,MAAM,CAAC;MAC/B,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMY,MAAMA,CAACL,EAAE,EAAE;IACf,IAAI;MACF,MAAMd,SAAS,CAACmB,MAAM,CAAC,IAAI,IAAI,CAAChB,YAAY,IAAIW,EAAE,EAAE,CAAC;MACrD,OAAO,IAAI;IACb,CAAC,CAAC,OAAOP,KAAK,EAAE;MACd,IAAI,CAACC,WAAW,CAACD,KAAK,EAAE,MAAM,CAAC;MAC/B,MAAMA,KAAK;IACb;EACF;;EAEA;EACAC,WAAWA,CAACD,KAAK,EAAEa,cAAc,EAAE;IACjCC,OAAO,CAACd,KAAK,CAACa,cAAc,EAAEb,KAAK,CAAC;IACpC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}