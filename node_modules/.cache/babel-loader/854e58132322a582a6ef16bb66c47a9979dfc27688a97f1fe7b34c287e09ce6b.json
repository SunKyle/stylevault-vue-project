{"ast":null,"code":"import { ref, computed, onMounted, nextTick, onUnmounted } from 'vue';\nimport ClothingCategory from '../components/ui/ClothingCategory.vue';\nimport ClothingItem from '../components/ui/ClothingItem.vue';\nimport FavoriteSection from '../components/wardrobe/FavoriteSection.vue';\nimport FeaturedOutfits from '../components/wardrobe/FeaturedOutfits.vue';\nimport WardrobeHeader from '../components/wardrobe/WardrobeHeader.vue';\nimport CategoryDrawer from '../components/wardrobe/CategoryDrawer.vue';\nimport ClothingItemEditor from '../components/wardrobe/ClothingItemEditor.vue';\nimport ContentLayout from '../components/layout/ContentLayout.vue';\nimport { useClothingStore } from '../stores/index';\nimport { outfitService } from '../services/outfitService';\nimport { useRouter } from 'vue-router';\nimport { showToast } from '../utils/toast';\n\n// 添加一个方法来刷新数据\n\nexport default {\n  __name: 'WardrobeView',\n  emits: ['showUpload'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const router = useRouter();\n    const clothingStore = useClothingStore();\n    const emit = __emit;\n\n    // 状态\n    const isDrawerOpen = ref(false);\n    const searchResults = ref([]);\n    const isSearchMode = ref(false);\n    const currentSearchKeyword = ref('');\n    const currentFilter = ref('all');\n    const currentSort = ref(null);\n    const editingItem = ref(null);\n    const isEditorOpen = ref(false);\n    const isReadOnlyMode = ref(false);\n\n    // 计算属性\n    const categories = computed(() => clothingStore.categories);\n    const selectedCategory = computed(() => clothingStore.selectedCategory);\n    const loading = computed(() => clothingStore.loading);\n    const error = computed(() => clothingStore.error);\n    const recentlyAddedItems = computed(() => clothingStore.recentlyAddedItems);\n    const favoriteItems = computed(() => clothingStore.favoriteItems);\n\n    // 精选搭配数据\n    const outfits = ref([]);\n\n    // 获取搭配数据\n    const fetchOutfits = async () => {\n      try {\n        const response = await outfitService.getOutfits();\n        outfits.value = response.data || [];\n      } catch (error) {\n        console.error('获取搭配数据失败:', error);\n        outfits.value = [];\n      }\n    };\n    function getCategoryItemCount(categoryId) {\n      if (isSearchMode.value) return searchResults.value.length;\n      if (categoryId === 'all') return clothingStore.clothingItems.length;\n      return clothingStore.itemsByCategory[categoryId]?.length || 0;\n    }\n    function getSelectedCategoryName() {\n      if (isSearchMode.value) return `搜索结果: \"${currentSearchKeyword.value}\"`;\n      if (!selectedCategory.value) return '';\n      if (selectedCategory.value === 'all') return '全部衣物';\n      const category = categories.value.find(c => c.id === selectedCategory.value);\n      return category ? category.name : '';\n    }\n    function getCategoryItems(categoryId) {\n      // 获取基础数据\n      let items;\n      if (isSearchMode.value) {\n        // 返回搜索结果\n        items = [...searchResults.value];\n      } else if (categoryId === 'all') {\n        // 返回所有衣物 - 确保新添加的衣物也能显示\n        // 直接从store获取最新的衣物列表，避免响应式更新问题\n        items = [...clothingStore.clothingItems];\n      } else {\n        // 不使用计算属性，直接从store中过滤，确保能获取到最新添加的衣物\n        items = clothingStore.clothingItems.filter(item => String(item.categoryId) === String(categoryId) || item.category && String(item.category) === String(categoryId));\n      }\n\n      // 应用筛选\n      if (currentFilter.value === 'favorites') {\n        items = items.filter(item => item.favorite);\n      } else if (currentFilter.value === 'recent') {\n        // 按购买日期排序，与wardrobeStore中的recentlyAddedItems保持一致\n        items = [...items].sort((a, b) => {\n          const dateA = new Date(a.purchaseDate || 0);\n          const dateB = new Date(b.purchaseDate || 0);\n          return dateB - dateA;\n        });\n      }\n\n      // 应用排序\n      if (currentSort.value === 'name') {\n        items = [...items].sort((a, b) => a.name.localeCompare(b.name));\n      }\n      return items;\n    }\n\n    // 定义暴露的方法\n    function refreshWardrobeData() {\n      // 强制更新组件，确保新添加的衣物能立即显示\n      forceUpdate();\n    }\n\n    // 在<script setup>中使用defineExpose暴露方法\n    __expose({\n      refreshWardrobeData\n    });\n\n    // 强制更新组件的key\n    const forceUpdateKey = ref(0);\n    function forceUpdate() {\n      forceUpdateKey.value++;\n      nextTick(() => {\n        console.log('组件已强制更新');\n      });\n    }\n    onMounted(() => {\n      initializeData();\n\n      // 监听全局查看全部衣物事件\n      document.addEventListener('view-all-clothing', viewAllCategories);\n    });\n    onUnmounted(() => {\n      // 清理事件监听器\n      document.removeEventListener('view-all-clothing', viewAllCategories);\n    });\n    function selectCategory(categoryId) {\n      console.log('点击分类，ID:', categoryId);\n      console.log('当前选中分类:', clothingStore.selectedCategory);\n      console.log('所有分类:', categories.value);\n      console.log('所有衣物:', clothingStore.clothingItems);\n\n      // 如果当前是搜索模式，先退出搜索模式\n      if (isSearchMode.value) {\n        isSearchMode.value = false;\n        searchResults.value = [];\n      }\n\n      // 重置筛选和排序状态\n      currentFilter.value = 'all';\n      currentSort.value = null;\n      if (clothingStore.selectedCategory === categoryId) {\n        console.log('清除选中分类');\n        clothingStore.clearSelectedCategory();\n        // 关闭抽屉\n        isDrawerOpen.value = false;\n      } else {\n        console.log('设置选中分类:', categoryId);\n        clothingStore.setSelectedCategory(categoryId);\n        // 打开抽屉\n        isDrawerOpen.value = true;\n      }\n      console.log('更新后选中分类:', clothingStore.selectedCategory);\n\n      // 强制更新组件\n      forceUpdate();\n    }\n    async function toggleFavorite(item) {\n      try {\n        await clothingStore.updateClothingItem(item.id, {\n          favorite: !item.favorite\n        });\n        showToast(item.favorite ? '已取消收藏' : '已添加到收藏', 'success');\n      } catch (error) {\n        showToast('操作失败，请重试', 'error');\n      }\n    }\n    async function handleSearch(keyword) {\n      console.log('开始搜索，关键词:', keyword);\n      console.log('当前衣物数据:', clothingStore.clothingItems);\n      if (!keyword.trim()) {\n        // 搜索关键词为空，退出搜索模式\n        isSearchMode.value = false;\n        searchResults.value = [];\n        clothingStore.clearSelectedCategory(); // 清除分类选择\n        return;\n      }\n\n      // 进入搜索模式\n      isSearchMode.value = true;\n\n      // 从当前衣物数据中搜索\n      const allItems = clothingStore.clothingItems;\n      console.log('搜索范围衣物:', allItems);\n\n      // 简单的关键词匹配\n      const results = allItems.filter(item => {\n        const name = (item.name || '').toLowerCase();\n        const description = (item.description || '').toLowerCase();\n        const categoryName = (item.categoryName || '').toLowerCase();\n        const searchQuery = keyword.toLowerCase();\n        return name.includes(searchQuery) || description.includes(searchQuery) || categoryName.includes(searchQuery);\n      });\n      console.log('搜索结果:', results);\n      searchResults.value = results;\n\n      // 搜索时清除分类选择\n      clothingStore.clearSelectedCategory();\n      try {\n        // 保存搜索关键词\n        currentSearchKeyword.value = keyword;\n        showToast(`找到 ${results.length} 件相关衣物`, 'success');\n        // 打开抽屉展示\n        isDrawerOpen.value = true;\n      } catch (error) {\n        showToast('搜索失败，请重试', 'error');\n      }\n    }\n    async function initializeData() {\n      await clothingStore.fetchCategories();\n      await clothingStore.fetchClothingItems();\n      console.log('衣物数据加载完成:', clothingStore.clothingItems);\n      console.log('分类数据加载完成:', clothingStore.categories);\n    }\n    function closeDrawer() {\n      // 如果是搜索模式，清除搜索状态\n      if (isSearchMode.value) {\n        isSearchMode.value = false;\n        searchResults.value = [];\n      } else {\n        clothingStore.clearSelectedCategory();\n      }\n      // 重置筛选和排序状态\n      currentFilter.value = 'all';\n      currentSort.value = null;\n      isDrawerOpen.value = false;\n    }\n    function viewItemDetail(item) {\n      // 设置当前查看的衣物\n      editingItem.value = item;\n      // 打开编辑模态框，设置为只读模式\n      isEditorOpen.value = true;\n      isReadOnlyMode.value = true;\n    }\n    function editItem(item) {\n      // 设置当前编辑的衣物\n      editingItem.value = item;\n      // 打开编辑模态框\n      isEditorOpen.value = true;\n    }\n    async function deleteItem(item) {\n      // 删除衣物的逻辑\n      if (confirm(`确定要删除 \"${item.name}\" 吗？此操作不可撤销。`)) {\n        try {\n          await clothingStore.deleteClothingItem(item.id);\n          showToast('衣物已成功删除', 'success');\n          // 如果删除后当前分类为空，关闭抽屉\n          if (getCategoryItems(selectedCategory.value).length === 1) {\n            closeDrawer();\n          }\n        } catch (error) {\n          showToast('删除失败，请重试', 'error');\n        }\n      }\n    }\n    function viewAllCategories() {\n      // 查看所有分类的逻辑\n      // 如果当前是搜索模式，先退出搜索模式\n      if (isSearchMode.value) {\n        isSearchMode.value = false;\n        searchResults.value = [];\n      }\n      // 重置筛选和排序状态\n      currentFilter.value = 'all';\n      currentSort.value = null;\n      // 设置一个特殊值表示查看全部\n      clothingStore.setSelectedCategory('all');\n\n      // 强制更新组件，确保显示最新添加的衣物\n      forceUpdate();\n      isDrawerOpen.value = true;\n    }\n\n    // 筛选处理函数\n    function handleFilter(filterType) {\n      currentFilter.value = filterType;\n      // 强制更新组件，以应用筛选\n      forceUpdate();\n    }\n\n    // 排序处理函数\n    function handleSort(sortType) {\n      currentSort.value = sortType;\n      // 强制更新组件，以应用排序\n      forceUpdate();\n    }\n\n    // 处理编辑保存\n    function handleEditSaved() {\n      // 编辑保存后强制更新组件，刷新数据\n      forceUpdate();\n    }\n\n    // 关闭编辑器\n    function closeEditor() {\n      isEditorOpen.value = false;\n      editingItem.value = null;\n      isReadOnlyMode.value = false;\n    }\n\n    // 生命周期\n    onMounted(() => {\n      initializeData();\n    });\n    const __returned__ = {\n      router,\n      clothingStore,\n      emit,\n      isDrawerOpen,\n      searchResults,\n      isSearchMode,\n      currentSearchKeyword,\n      currentFilter,\n      currentSort,\n      editingItem,\n      isEditorOpen,\n      isReadOnlyMode,\n      categories,\n      selectedCategory,\n      loading,\n      error,\n      recentlyAddedItems,\n      favoriteItems,\n      outfits,\n      fetchOutfits,\n      getCategoryItemCount,\n      getSelectedCategoryName,\n      getCategoryItems,\n      refreshWardrobeData,\n      forceUpdateKey,\n      forceUpdate,\n      selectCategory,\n      toggleFavorite,\n      handleSearch,\n      initializeData,\n      closeDrawer,\n      viewItemDetail,\n      editItem,\n      deleteItem,\n      viewAllCategories,\n      handleFilter,\n      handleSort,\n      handleEditSaved,\n      closeEditor,\n      ref,\n      computed,\n      onMounted,\n      nextTick,\n      onUnmounted,\n      ClothingCategory,\n      ClothingItem,\n      FavoriteSection,\n      FeaturedOutfits,\n      WardrobeHeader,\n      CategoryDrawer,\n      ClothingItemEditor,\n      ContentLayout,\n      get useClothingStore() {\n        return useClothingStore;\n      },\n      get outfitService() {\n        return outfitService;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get showToast() {\n        return showToast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","nextTick","onUnmounted","ClothingCategory","ClothingItem","FavoriteSection","FeaturedOutfits","WardrobeHeader","CategoryDrawer","ClothingItemEditor","ContentLayout","useClothingStore","outfitService","useRouter","showToast","router","clothingStore","emit","__emit","isDrawerOpen","searchResults","isSearchMode","currentSearchKeyword","currentFilter","currentSort","editingItem","isEditorOpen","isReadOnlyMode","categories","selectedCategory","loading","error","recentlyAddedItems","favoriteItems","outfits","fetchOutfits","response","getOutfits","value","data","console","getCategoryItemCount","categoryId","length","clothingItems","itemsByCategory","getSelectedCategoryName","category","find","c","id","name","getCategoryItems","items","filter","item","String","favorite","sort","a","b","dateA","Date","purchaseDate","dateB","localeCompare","refreshWardrobeData","forceUpdate","__expose","forceUpdateKey","log","initializeData","document","addEventListener","viewAllCategories","removeEventListener","selectCategory","clearSelectedCategory","setSelectedCategory","toggleFavorite","updateClothingItem","handleSearch","keyword","trim","allItems","results","toLowerCase","description","categoryName","searchQuery","includes","fetchCategories","fetchClothingItems","closeDrawer","viewItemDetail","editItem","deleteItem","confirm","deleteClothingItem","handleFilter","filterType","handleSort","sortType","handleEditSaved","closeEditor"],"sources":["/Users/sunxiaokai/Desktop/stylevault-vue-project/src/views/WardrobeView.vue"],"sourcesContent":["<template>\n  <ContentLayout>\n    <section :key=\"forceUpdateKey\">\n      <!-- 搜索和上传区 -->\n      <WardrobeHeader\n        :handleSearch=\"handleSearch\"\n        @showUpload=\"$emit('showUpload')\"\n        @viewAll=\"viewAllCategories\"\n      />\n\n      <!-- 加载状态 -->\n      <div v-if=\"loading\" class=\"container mx-auto px-4 mb-12\">\n        <div class=\"flex justify-center items-center h-64\">\n          <div\n            class=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary\"\n          ></div>\n        </div>\n      </div>\n\n      <!-- 错误状态 -->\n      <div v-else-if=\"error\" class=\"container mx-auto px-4 mb-12\">\n        <div class=\"bg-red-50 border border-red-200 rounded-xl p-6 text-center\">\n          <font-awesome-icon\n            :icon=\"['fas', 'exclamation-circle']\"\n            class=\"text-red-500 text-3xl mb-3\"\n          />\n          <h3 class=\"text-lg font-medium text-red-800 mb-2\">加载失败</h3>\n          <p class=\"text-red-600 mb-4\">{{ error }}</p>\n          <button\n            @click=\"initializeData\"\n            class=\"bg-red-500 hover:bg-red-600 text-white font-medium py-2 px-6 rounded-lg transition-colors\"\n          >\n            重试\n          </button>\n        </div>\n      </div>\n\n      <!-- 衣物分类 -->\n      <div v-else class=\"container mx-auto px-4 mb-12\">\n        <div class=\"flex items-center justify-between mb-6\">\n          <h3 class=\"text-xl md:text-2xl font-bold\">衣物分类</h3>\n          <a\n            href=\"#\"\n            @click.prevent=\"viewAllCategories\"\n            class=\"text-primary font-medium flex items-center group\"\n          >\n            <span>查看全部</span>\n            <font-awesome-icon\n              :icon=\"['fas', 'arrow-right']\"\n              class=\"ml-1 text-sm group-hover:translate-x-1 transition-transform\"\n            />\n          </a>\n        </div>\n        <div\n          class=\"grid grid-cols-2 xs:grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-6 gap-3 sm:gap-4\"\n        >\n          <ClothingCategory\n            v-for=\"category in categories\"\n            :key=\"category.id\"\n            :category=\"category\"\n            :count=\"getCategoryItemCount(category.id)\"\n            @click=\"selectCategory(category.id)\"\n            :selected=\"selectedCategory === category.id\"\n          />\n        </div>\n      </div>\n\n      <!-- 我的收藏 -->\n      <FavoriteSection />\n\n      <!-- 精选搭配 -->\n      <FeaturedOutfits v-if=\"!loading && !error\" :outfits=\"outfits\" />\n      <div\n        v-if=\"getCategoryItems(selectedCategory).length > 0\"\n        class=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-6 xl:grid-cols-7 2xl:grid-cols-8 gap-4\"\n      >\n        <ClothingItem\n          v-for=\"item in getCategoryItems(selectedCategory)\"\n          :key=\"item.id\"\n          :item=\"item\"\n          @like=\"toggleFavorite(item)\"\n          @viewDetail=\"viewItemDetail\"\n          class=\"transform transition-transform hover:scale-105\"\n        />\n      </div>\n\n      <!-- 最近添加的衣物 -->\n      <div v-if=\"!loading && !error && !selectedCategory\" class=\"container mx-auto px-4\">\n        <div class=\"flex items-center justify-between mb-6\">\n          <h3 class=\"text-xl md:text-2xl font-bold\">最近添加</h3>\n          <a href=\"#\" class=\"text-primary font-medium flex items-center group\">\n            <span>管理所有衣物</span>\n            <font-awesome-icon\n              :icon=\"['fas', 'arrow-right']\"\n              class=\"ml-1 text-sm group-hover:translate-x-1 transition-transform\"\n            />\n          </a>\n        </div>\n        <div\n          class=\"grid grid-cols-2 xs:grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-6 gap-4 sm:gap-5\"\n        >\n          <ClothingItem\n            v-for=\"item in recentlyAddedItems\"\n            :key=\"item.id\"\n            :item=\"item\"\n            @like=\"toggleFavorite(item)\"\n          />\n          <!-- 添加更多 -->\n          <div class=\"group relative\">\n            <div\n              class=\"aspect-square bg-white rounded-xl overflow-hidden shadow-soft hover:shadow-medium transition-all duration-300 mb-3 border-2 border-dashed border-neutral-200 flex items-center justify-center\"\n            >\n              <div class=\"text-center p-6 group-hover:scale-110 transition-transform\">\n                <div\n                  class=\"w-14 h-14 mx-auto bg-neutral-100 rounded-full flex items-center justify-center mb-3\"\n                >\n                  <font-awesome-icon :icon=\"['fas', 'plus']\" class=\"text-neutral-400 text-xl\" />\n                </div>\n                <p class=\"text-neutral-500 font-medium\">添加更多衣物</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- 分类结果展示 -->\n      <CategoryDrawer\n        :isDrawerOpen=\"isDrawerOpen\"\n        :isSearchMode=\"isSearchMode\"\n        :selectedCategory=\"selectedCategory\"\n        :getCategoryItems=\"getCategoryItems\"\n        :getSelectedCategoryName=\"getSelectedCategoryName\"\n        :getCategoryItemCount=\"getCategoryItemCount\"\n        :key=\"forceUpdateKey\"\n        @closeDrawer=\"closeDrawer\"\n        @showUpload=\"$emit('showUpload')\"\n        @toggleFavorite=\"toggleFavorite\"\n        @viewItemDetail=\"viewItemDetail\"\n        @editItem=\"editItem\"\n        @deleteItem=\"deleteItem\"\n        @applyFilter=\"handleFilter\"\n        @applySort=\"handleSort\"\n      />\n\n      <!-- 衣物编辑器 -->\n      <ClothingItemEditor\n        :isOpen=\"isEditorOpen\"\n        :item=\"editingItem\"\n        :readOnly=\"isReadOnlyMode\"\n        @close=\"closeEditor\"\n        @saved=\"handleEditSaved\"\n      />\n    </section>\n  </ContentLayout>\n</template>\n\n<script setup>\n  import { ref, computed, onMounted, nextTick, onUnmounted } from 'vue';\n  import ClothingCategory from '../components/ui/ClothingCategory.vue';\n  import ClothingItem from '../components/ui/ClothingItem.vue';\n  import FavoriteSection from '../components/wardrobe/FavoriteSection.vue';\n  import FeaturedOutfits from '../components/wardrobe/FeaturedOutfits.vue';\n  import WardrobeHeader from '../components/wardrobe/WardrobeHeader.vue';\n  import CategoryDrawer from '../components/wardrobe/CategoryDrawer.vue';\n  import ClothingItemEditor from '../components/wardrobe/ClothingItemEditor.vue';\n  import ContentLayout from '../components/layout/ContentLayout.vue';\n  import { useClothingStore } from '../stores/index';\n  import { outfitService } from '../services/outfitService';\n  import { useRouter } from 'vue-router';\n  import { showToast } from '../utils/toast';\n\n  const router = useRouter();\n  const clothingStore = useClothingStore();\n  const emit = defineEmits(['showUpload']);\n\n  // 状态\n  const isDrawerOpen = ref(false);\n  const searchResults = ref([]);\n  const isSearchMode = ref(false);\n  const currentSearchKeyword = ref('');\n  const currentFilter = ref('all');\n  const currentSort = ref(null);\n  const editingItem = ref(null);\n  const isEditorOpen = ref(false);\n  const isReadOnlyMode = ref(false);\n\n  // 计算属性\n  const categories = computed(() => clothingStore.categories);\n  const selectedCategory = computed(() => clothingStore.selectedCategory);\n  const loading = computed(() => clothingStore.loading);\n  const error = computed(() => clothingStore.error);\n  const recentlyAddedItems = computed(() => clothingStore.recentlyAddedItems);\n  const favoriteItems = computed(() => clothingStore.favoriteItems);\n\n  // 精选搭配数据\n  const outfits = ref([]);\n\n  // 获取搭配数据\n  const fetchOutfits = async () => {\n    try {\n      const response = await outfitService.getOutfits();\n      outfits.value = response.data || [];\n    } catch (error) {\n      console.error('获取搭配数据失败:', error);\n      outfits.value = [];\n    }\n  };\n\n  function getCategoryItemCount(categoryId) {\n    if (isSearchMode.value) return searchResults.value.length;\n    if (categoryId === 'all') return clothingStore.clothingItems.length;\n    return clothingStore.itemsByCategory[categoryId]?.length || 0;\n  }\n\n  function getSelectedCategoryName() {\n    if (isSearchMode.value) return `搜索结果: \"${currentSearchKeyword.value}\"`;\n    if (!selectedCategory.value) return '';\n    if (selectedCategory.value === 'all') return '全部衣物';\n    const category = categories.value.find(c => c.id === selectedCategory.value);\n    return category ? category.name : '';\n  }\n\n  function getCategoryItems(categoryId) {\n    // 获取基础数据\n    let items;\n    if (isSearchMode.value) {\n      // 返回搜索结果\n      items = [...searchResults.value];\n    } else if (categoryId === 'all') {\n      // 返回所有衣物 - 确保新添加的衣物也能显示\n      // 直接从store获取最新的衣物列表，避免响应式更新问题\n      items = [...clothingStore.clothingItems];\n    } else {\n      // 不使用计算属性，直接从store中过滤，确保能获取到最新添加的衣物\n      items = clothingStore.clothingItems.filter(\n        item =>\n          String(item.categoryId) === String(categoryId) ||\n          (item.category && String(item.category) === String(categoryId))\n      );\n    }\n\n    // 应用筛选\n    if (currentFilter.value === 'favorites') {\n      items = items.filter(item => item.favorite);\n    } else if (currentFilter.value === 'recent') {\n      // 按购买日期排序，与wardrobeStore中的recentlyAddedItems保持一致\n      items = [...items].sort((a, b) => {\n        const dateA = new Date(a.purchaseDate || 0);\n        const dateB = new Date(b.purchaseDate || 0);\n        return dateB - dateA;\n      });\n    }\n\n    // 应用排序\n    if (currentSort.value === 'name') {\n      items = [...items].sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    return items;\n  }\n\n  // 定义暴露的方法\n  import { defineExpose } from 'vue';\n\n  // 添加一个方法来刷新数据\n  function refreshWardrobeData() {\n    // 强制更新组件，确保新添加的衣物能立即显示\n    forceUpdate();\n  }\n\n  // 在<script setup>中使用defineExpose暴露方法\n  defineExpose({\n    refreshWardrobeData,\n  });\n\n  // 强制更新组件的key\n  const forceUpdateKey = ref(0);\n\n  function forceUpdate() {\n    forceUpdateKey.value++;\n    nextTick(() => {\n      console.log('组件已强制更新');\n    });\n  }\n\n  onMounted(() => {\n    initializeData();\n\n    // 监听全局查看全部衣物事件\n    document.addEventListener('view-all-clothing', viewAllCategories);\n  });\n\n  onUnmounted(() => {\n    // 清理事件监听器\n    document.removeEventListener('view-all-clothing', viewAllCategories);\n  });\n\n  function selectCategory(categoryId) {\n    console.log('点击分类，ID:', categoryId);\n    console.log('当前选中分类:', clothingStore.selectedCategory);\n    console.log('所有分类:', categories.value);\n    console.log('所有衣物:', clothingStore.clothingItems);\n\n    // 如果当前是搜索模式，先退出搜索模式\n    if (isSearchMode.value) {\n      isSearchMode.value = false;\n      searchResults.value = [];\n    }\n\n    // 重置筛选和排序状态\n    currentFilter.value = 'all';\n    currentSort.value = null;\n\n    if (clothingStore.selectedCategory === categoryId) {\n      console.log('清除选中分类');\n      clothingStore.clearSelectedCategory();\n      // 关闭抽屉\n      isDrawerOpen.value = false;\n    } else {\n      console.log('设置选中分类:', categoryId);\n      clothingStore.setSelectedCategory(categoryId);\n      // 打开抽屉\n      isDrawerOpen.value = true;\n    }\n\n    console.log('更新后选中分类:', clothingStore.selectedCategory);\n\n    // 强制更新组件\n    forceUpdate();\n  }\n\n  async function toggleFavorite(item) {\n    try {\n      await clothingStore.updateClothingItem(item.id, { favorite: !item.favorite });\n      showToast(item.favorite ? '已取消收藏' : '已添加到收藏', 'success');\n    } catch (error) {\n      showToast('操作失败，请重试', 'error');\n    }\n  }\n\n  async function handleSearch(keyword) {\n    console.log('开始搜索，关键词:', keyword);\n    console.log('当前衣物数据:', clothingStore.clothingItems);\n\n    if (!keyword.trim()) {\n      // 搜索关键词为空，退出搜索模式\n      isSearchMode.value = false;\n      searchResults.value = [];\n      clothingStore.clearSelectedCategory(); // 清除分类选择\n      return;\n    }\n\n    // 进入搜索模式\n    isSearchMode.value = true;\n\n    // 从当前衣物数据中搜索\n    const allItems = clothingStore.clothingItems;\n    console.log('搜索范围衣物:', allItems);\n\n    // 简单的关键词匹配\n    const results = allItems.filter(item => {\n      const name = (item.name || '').toLowerCase();\n      const description = (item.description || '').toLowerCase();\n      const categoryName = (item.categoryName || '').toLowerCase();\n      const searchQuery = keyword.toLowerCase();\n\n      return (\n        name.includes(searchQuery) ||\n        description.includes(searchQuery) ||\n        categoryName.includes(searchQuery)\n      );\n    });\n\n    console.log('搜索结果:', results);\n    searchResults.value = results;\n\n    // 搜索时清除分类选择\n    clothingStore.clearSelectedCategory();\n\n    try {\n      // 保存搜索关键词\n      currentSearchKeyword.value = keyword;\n      showToast(`找到 ${results.length} 件相关衣物`, 'success');\n      // 打开抽屉展示\n      isDrawerOpen.value = true;\n    } catch (error) {\n      showToast('搜索失败，请重试', 'error');\n    }\n  }\n\n  async function initializeData() {\n    await clothingStore.fetchCategories();\n    await clothingStore.fetchClothingItems();\n    console.log('衣物数据加载完成:', clothingStore.clothingItems);\n    console.log('分类数据加载完成:', clothingStore.categories);\n  }\n\n  function closeDrawer() {\n    // 如果是搜索模式，清除搜索状态\n    if (isSearchMode.value) {\n      isSearchMode.value = false;\n      searchResults.value = [];\n    } else {\n      clothingStore.clearSelectedCategory();\n    }\n    // 重置筛选和排序状态\n    currentFilter.value = 'all';\n    currentSort.value = null;\n    isDrawerOpen.value = false;\n  }\n\n  function viewItemDetail(item) {\n    // 设置当前查看的衣物\n    editingItem.value = item;\n    // 打开编辑模态框，设置为只读模式\n    isEditorOpen.value = true;\n    isReadOnlyMode.value = true;\n  }\n\n  function editItem(item) {\n    // 设置当前编辑的衣物\n    editingItem.value = item;\n    // 打开编辑模态框\n    isEditorOpen.value = true;\n  }\n\n  async function deleteItem(item) {\n    // 删除衣物的逻辑\n    if (confirm(`确定要删除 \"${item.name}\" 吗？此操作不可撤销。`)) {\n      try {\n        await clothingStore.deleteClothingItem(item.id);\n        showToast('衣物已成功删除', 'success');\n        // 如果删除后当前分类为空，关闭抽屉\n        if (getCategoryItems(selectedCategory.value).length === 1) {\n          closeDrawer();\n        }\n      } catch (error) {\n        showToast('删除失败，请重试', 'error');\n      }\n    }\n  }\n\n  function viewAllCategories() {\n    // 查看所有分类的逻辑\n    // 如果当前是搜索模式，先退出搜索模式\n    if (isSearchMode.value) {\n      isSearchMode.value = false;\n      searchResults.value = [];\n    }\n    // 重置筛选和排序状态\n    currentFilter.value = 'all';\n    currentSort.value = null;\n    // 设置一个特殊值表示查看全部\n    clothingStore.setSelectedCategory('all');\n\n    // 强制更新组件，确保显示最新添加的衣物\n    forceUpdate();\n\n    isDrawerOpen.value = true;\n  }\n\n  // 筛选处理函数\n  function handleFilter(filterType) {\n    currentFilter.value = filterType;\n    // 强制更新组件，以应用筛选\n    forceUpdate();\n  }\n\n  // 排序处理函数\n  function handleSort(sortType) {\n    currentSort.value = sortType;\n    // 强制更新组件，以应用排序\n    forceUpdate();\n  }\n\n  // 处理编辑保存\n  function handleEditSaved() {\n    // 编辑保存后强制更新组件，刷新数据\n    forceUpdate();\n  }\n\n  // 关闭编辑器\n  function closeEditor() {\n    isEditorOpen.value = false;\n    editingItem.value = null;\n    isReadOnlyMode.value = false;\n  }\n\n  // 生命周期\n  onMounted(() => {\n    initializeData();\n  });\n</script>\n\n<style scoped>\n  .animate-fadeIn {\n    animation: fadeIn 0.5s ease-in-out;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  /* 过渡动画 */\n  .fade-enter-active,\n  .fade-leave-active {\n    transition: opacity 0.3s ease;\n  }\n\n  .fade-enter-from,\n  .fade-leave-to {\n    opacity: 0;\n  }\n\n  .animated {\n    animation-duration: 1s;\n    animation-fill-mode: both;\n  }\n\n  .slide-up-enter-active {\n    animation-name: slideUpIn;\n    animation-duration: 1s;\n  }\n\n  .slide-up-leave-active {\n    animation-name: slideUpOut;\n    animation-duration: 0.3s;\n  }\n\n  .slide-up-enter-from {\n    transform: translateY(100%) scale(0.95);\n    opacity: 0;\n  }\n\n  .slide-up-enter-to {\n    transform: translateY(0) scale(1);\n    opacity: 1;\n  }\n\n  .slide-up-leave-from {\n    transform: translateY(0) scale(1);\n    opacity: 1;\n  }\n\n  .slide-up-leave-to {\n    transform: translateY(100%) scale(0.95);\n    opacity: 0;\n  }\n\n  @keyframes slideUpIn {\n    from {\n      transform: translateY(100%) scale(0.95);\n      opacity: 0;\n    }\n    to {\n      transform: translateY(0) scale(1);\n      opacity: 1;\n    }\n  }\n\n  @keyframes slideUpOut {\n    from {\n      transform: translateY(0) scale(1);\n      opacity: 1;\n    }\n    to {\n      transform: translateY(100%) scale(0.95);\n      opacity: 0;\n    }\n  }\n\n  /* 隐藏滚动条但保持滚动功能 */\n  .scrollbar-hide::-webkit-scrollbar {\n    display: none;\n  }\n\n  .scrollbar-hide {\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n  }\n\n  /* 交错淡入动画 */\n  .staggered-fade-enter-active {\n    transition: all 0.5s ease;\n  }\n\n  .staggered-fade-enter-from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n\n  .staggered-fade-enter-to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n\n  /* 向上淡入动画 */\n  .fade-up-enter-active,\n  .fade-up-leave-active {\n    transition: all 0.6s ease;\n  }\n\n  .fade-up-enter-from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n\n  .fade-up-enter-to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n\n  /* 浮动动画 */\n  @keyframes float {\n    0%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-10px);\n    }\n  }\n\n  .animate-float {\n    animation: float 3s ease-in-out infinite;\n  }\n\n  /* 慢速脉冲动画 */\n  @keyframes pulse-slow {\n    0%,\n    100% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.7;\n    }\n  }\n\n  .animate-pulse-slow {\n    animation: pulse-slow 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n\n  /* 慢速扩散动画 */\n  @keyframes ping-slow {\n    75%,\n    100% {\n      transform: scale(1.5);\n      opacity: 0;\n    }\n  }\n\n  .animate-ping-slow {\n    animation: ping-slow 2s cubic-bezier(0, 0, 0.2, 1) infinite;\n  }\n\n  /* 弹跳进入动画 */\n  @keyframes bounce-in {\n    0% {\n      transform: scale(0.8);\n      opacity: 0;\n    }\n    50% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n\n  .animate-bounce-in {\n    animation: bounce-in 0.5s ease-out;\n  }\n\n  /* 延迟淡入动画 */\n  @keyframes fade-in-delay {\n    from {\n      opacity: 0;\n      transform: translateY(10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  .animate-fade-in-delay {\n    animation: fade-in-delay 0.5s ease-out;\n  }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}