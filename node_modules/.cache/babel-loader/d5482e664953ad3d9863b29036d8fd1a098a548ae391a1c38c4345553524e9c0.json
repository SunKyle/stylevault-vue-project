{"ast":null,"code":"import axios from 'axios';\nimport mockAPI from '../../mock';\n\n// 创建axios实例\nconst apiClient = axios.create({\n  baseURL: process.env.VUE_APP_API_BASE_URL || '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\napiClient.interceptors.request.use(config => {\n  // 添加token等认证信息\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器\napiClient.interceptors.response.use(response => {\n  // 统一处理响应数据\n  return response.data;\n}, error => {\n  // 统一处理错误\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        // 处理未授权\n        console.error('未授权访问，请登录');\n        break;\n      case 404:\n        // 处理未找到\n        console.error('请求的资源不存在');\n        break;\n      case 500:\n        // 处理服务器错误\n        console.error('服务器错误，请稍后再试');\n        break;\n      default:\n        // 处理其他错误\n        console.error(`请求错误: ${error.response.status}`);\n    }\n  } else {\n    // 处理网络错误等\n    console.error('网络错误，请检查您的网络连接');\n  }\n  return Promise.reject(error);\n});\n\n// API适配器 - 根据环境选择使用真实API或Mock API\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\n// 衣物API适配器\nexport const clothingAdaptorApi = {\n  // 获取所有衣物类别\n  getCategories: async () => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.getCategories();\n    }\n    return apiClient.get('/categories');\n  },\n  // 获取所有衣物\n  getClothingItems: async () => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.getClothingItems();\n    }\n    return apiClient.get('/clothing');\n  },\n  // 根据类别获取衣物\n  getClothingItemsByCategory: async categoryId => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.getClothingItemsByCategory(categoryId);\n    }\n    return apiClient.get(`/clothing/category/${categoryId}`);\n  },\n  // 获取衣物详情\n  getClothingItemDetail: async id => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.getClothingItemDetail(id);\n    }\n    return apiClient.get(`/clothing/${id}`);\n  },\n  // 添加衣物\n  addClothingItem: async item => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.addClothingItem(item);\n    }\n    return apiClient.post('/clothing', item);\n  },\n  // 更新衣物信息\n  updateClothingItem: async (id, updates) => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.updateClothingItem(id, updates);\n    }\n    return apiClient.put(`/clothing/${id}`, updates);\n  },\n  // 删除衣物\n  deleteClothingItem: async id => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.deleteClothingItem(id);\n    }\n    return apiClient.delete(`/clothing/${id}`);\n  },\n  // 搜索衣物\n  searchClothingItems: async keyword => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.searchClothingItems(keyword);\n    }\n    return apiClient.get('/clothing/search', {\n      params: {\n        keyword\n      }\n    });\n  }\n};\n\n// 用户API适配器\nexport const userAdaptorApi = {\n  // 用户登录\n  login: async credentials => {\n    if (isDevelopment) {\n      return mockAPI.user.login(credentials);\n    }\n    return apiClient.post('/user/login', credentials);\n  },\n  // 用户注册\n  register: async userData => {\n    if (isDevelopment) {\n      return mockAPI.user.register(userData);\n    }\n    return apiClient.post('/user/register', userData);\n  },\n  // 获取用户信息\n  getUserProfile: async userId => {\n    if (isDevelopment) {\n      return mockAPI.user.getUserProfile(userId);\n    }\n    return apiClient.get(`/user/${userId}`);\n  },\n  // 更新用户信息\n  updateUserProfile: async (userId, updates) => {\n    if (isDevelopment) {\n      return mockAPI.user.updateUserProfile(userId, updates);\n    }\n    return apiClient.put(`/user/${userId}`, updates);\n  }\n};\n\n// 搭配API适配器\nexport const outfitAdaptorApi = {\n  // 获取所有搭配\n  getOutfits: async () => {\n    if (isDevelopment) {\n      return mockAPI.outfit.getOutfits();\n    }\n    return apiClient.get('/outfits');\n  },\n  // 根据标签获取搭配\n  getOutfitsByTag: async tag => {\n    if (isDevelopment) {\n      return mockAPI.outfit.getOutfitsByTag(tag);\n    }\n    return apiClient.get('/outfits/tag', {\n      params: {\n        tag\n      }\n    });\n  },\n  // 获取搭配详情\n  getOutfitDetail: async id => {\n    if (isDevelopment) {\n      return mockAPI.outfit.getOutfitDetail(id);\n    }\n    return apiClient.get(`/outfits/${id}`);\n  },\n  // 添加新搭配\n  addOutfit: async outfit => {\n    if (isDevelopment) {\n      return mockAPI.outfit.addOutfit(outfit);\n    }\n    return apiClient.post('/outfits', outfit);\n  },\n  // 更新搭配\n  updateOutfit: async (id, updates) => {\n    if (isDevelopment) {\n      return mockAPI.outfit.updateOutfit(id, updates);\n    }\n    return apiClient.put(`/outfits/${id}`, updates);\n  },\n  // 删除搭配\n  deleteOutfit: async id => {\n    if (isDevelopment) {\n      return mockAPI.outfit.deleteOutfit(id);\n    }\n    return apiClient.delete(`/outfits/${id}`);\n  },\n  // 切换搭配的喜欢状态\n  toggleLike: async id => {\n    if (isDevelopment) {\n      return mockAPI.outfit.toggleLike(id);\n    }\n    return apiClient.post(`/outfits/${id}/like`);\n  }\n};\n\n// 分析API适配器\nexport const analyticsAdaptorApi = {\n  // 获取衣物统计信息\n  getClothingStats: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getClothingStats();\n    }\n    return apiClient.get('/analytics/clothing');\n  },\n  // 获取搭配统计信息\n  getOutfitStats: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getOutfitStats();\n    }\n    return apiClient.get('/analytics/outfits');\n  },\n  // 获取穿着频率分析\n  getWearFrequency: async (params = {}) => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getWearFrequency();\n    }\n    return apiClient.get('/analytics/wear-frequency', {\n      params\n    });\n  },\n  // 获取衣物类别分布\n  getCategoryDistribution: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getCategoryDistribution();\n    }\n    return apiClient.get('/analytics/category-distribution');\n  },\n  // 获取季节穿着分析\n  getSeasonalAnalysis: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getSeasonalAnalysis();\n    }\n    return apiClient.get('/analytics/seasonal');\n  },\n  // 获取风格偏好分析\n  getStylePreferences: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getStylePreferences();\n    }\n    return apiClient.get('/analytics/style-preferences');\n  },\n  // 获取衣物价值分析\n  getValueAnalysis: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getValueAnalysis();\n    }\n    return apiClient.get('/analytics/value');\n  }\n};\n\n// 默认导出apiClient，以便其他地方直接使用\nexport default apiClient;","map":{"version":3,"names":["axios","mockAPI","apiClient","create","baseURL","process","env","VUE_APP_API_BASE_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","status","console","isDevelopment","NODE_ENV","clothingAdaptorApi","getCategories","wardrobe","get","getClothingItems","getClothingItemsByCategory","categoryId","getClothingItemDetail","id","addClothingItem","item","post","updateClothingItem","updates","put","deleteClothingItem","delete","searchClothingItems","keyword","params","userAdaptorApi","login","credentials","user","register","userData","getUserProfile","userId","updateUserProfile","outfitAdaptorApi","getOutfits","outfit","getOutfitsByTag","tag","getOutfitDetail","addOutfit","updateOutfit","deleteOutfit","toggleLike","analyticsAdaptorApi","getClothingStats","analytics","getOutfitStats","getWearFrequency","getCategoryDistribution","getSeasonalAnalysis","getStylePreferences","getValueAnalysis"],"sources":["/Users/sunxiaokai/Desktop/stylevault-vue-project/src/services/api/adapter.js"],"sourcesContent":["import axios from 'axios';\nimport mockAPI from '../../mock';\n\n// 创建axios实例\nconst apiClient = axios.create({\n  baseURL: process.env.VUE_APP_API_BASE_URL || '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 请求拦截器\napiClient.interceptors.request.use(\n  config => {\n    // 添加token等认证信息\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\napiClient.interceptors.response.use(\n  response => {\n    // 统一处理响应数据\n    return response.data;\n  },\n  error => {\n    // 统一处理错误\n    if (error.response) {\n      switch (error.response.status) {\n        case 401:\n          // 处理未授权\n          console.error('未授权访问，请登录');\n          break;\n        case 404:\n          // 处理未找到\n          console.error('请求的资源不存在');\n          break;\n        case 500:\n          // 处理服务器错误\n          console.error('服务器错误，请稍后再试');\n          break;\n        default:\n          // 处理其他错误\n          console.error(`请求错误: ${error.response.status}`);\n      }\n    } else {\n      // 处理网络错误等\n      console.error('网络错误，请检查您的网络连接');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API适配器 - 根据环境选择使用真实API或Mock API\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\n// 衣物API适配器\nexport const clothingAdaptorApi = {\n  // 获取所有衣物类别\n  getCategories: async () => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.getCategories();\n    }\n    return apiClient.get('/categories');\n  },\n\n  // 获取所有衣物\n  getClothingItems: async () => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.getClothingItems();\n    }\n    return apiClient.get('/clothing');\n  },\n\n  // 根据类别获取衣物\n  getClothingItemsByCategory: async categoryId => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.getClothingItemsByCategory(categoryId);\n    }\n    return apiClient.get(`/clothing/category/${categoryId}`);\n  },\n\n  // 获取衣物详情\n  getClothingItemDetail: async id => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.getClothingItemDetail(id);\n    }\n    return apiClient.get(`/clothing/${id}`);\n  },\n\n  // 添加衣物\n  addClothingItem: async item => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.addClothingItem(item);\n    }\n    return apiClient.post('/clothing', item);\n  },\n\n  // 更新衣物信息\n  updateClothingItem: async (id, updates) => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.updateClothingItem(id, updates);\n    }\n    return apiClient.put(`/clothing/${id}`, updates);\n  },\n\n  // 删除衣物\n  deleteClothingItem: async id => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.deleteClothingItem(id);\n    }\n    return apiClient.delete(`/clothing/${id}`);\n  },\n\n  // 搜索衣物\n  searchClothingItems: async keyword => {\n    if (isDevelopment) {\n      return mockAPI.wardrobe.searchClothingItems(keyword);\n    }\n    return apiClient.get('/clothing/search', { params: { keyword } });\n  },\n};\n\n// 用户API适配器\nexport const userAdaptorApi = {\n  // 用户登录\n  login: async credentials => {\n    if (isDevelopment) {\n      return mockAPI.user.login(credentials);\n    }\n    return apiClient.post('/user/login', credentials);\n  },\n\n  // 用户注册\n  register: async userData => {\n    if (isDevelopment) {\n      return mockAPI.user.register(userData);\n    }\n    return apiClient.post('/user/register', userData);\n  },\n\n  // 获取用户信息\n  getUserProfile: async userId => {\n    if (isDevelopment) {\n      return mockAPI.user.getUserProfile(userId);\n    }\n    return apiClient.get(`/user/${userId}`);\n  },\n\n  // 更新用户信息\n  updateUserProfile: async (userId, updates) => {\n    if (isDevelopment) {\n      return mockAPI.user.updateUserProfile(userId, updates);\n    }\n    return apiClient.put(`/user/${userId}`, updates);\n  },\n};\n\n// 搭配API适配器\nexport const outfitAdaptorApi = {\n  // 获取所有搭配\n  getOutfits: async () => {\n    if (isDevelopment) {\n      return mockAPI.outfit.getOutfits();\n    }\n    return apiClient.get('/outfits');\n  },\n\n  // 根据标签获取搭配\n  getOutfitsByTag: async tag => {\n    if (isDevelopment) {\n      return mockAPI.outfit.getOutfitsByTag(tag);\n    }\n    return apiClient.get('/outfits/tag', { params: { tag } });\n  },\n\n  // 获取搭配详情\n  getOutfitDetail: async id => {\n    if (isDevelopment) {\n      return mockAPI.outfit.getOutfitDetail(id);\n    }\n    return apiClient.get(`/outfits/${id}`);\n  },\n\n  // 添加新搭配\n  addOutfit: async outfit => {\n    if (isDevelopment) {\n      return mockAPI.outfit.addOutfit(outfit);\n    }\n    return apiClient.post('/outfits', outfit);\n  },\n\n  // 更新搭配\n  updateOutfit: async (id, updates) => {\n    if (isDevelopment) {\n      return mockAPI.outfit.updateOutfit(id, updates);\n    }\n    return apiClient.put(`/outfits/${id}`, updates);\n  },\n\n  // 删除搭配\n  deleteOutfit: async id => {\n    if (isDevelopment) {\n      return mockAPI.outfit.deleteOutfit(id);\n    }\n    return apiClient.delete(`/outfits/${id}`);\n  },\n\n  // 切换搭配的喜欢状态\n  toggleLike: async id => {\n    if (isDevelopment) {\n      return mockAPI.outfit.toggleLike(id);\n    }\n    return apiClient.post(`/outfits/${id}/like`);\n  },\n};\n\n// 分析API适配器\nexport const analyticsAdaptorApi = {\n  // 获取衣物统计信息\n  getClothingStats: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getClothingStats();\n    }\n    return apiClient.get('/analytics/clothing');\n  },\n\n  // 获取搭配统计信息\n  getOutfitStats: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getOutfitStats();\n    }\n    return apiClient.get('/analytics/outfits');\n  },\n\n  // 获取穿着频率分析\n  getWearFrequency: async (params = {}) => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getWearFrequency();\n    }\n    return apiClient.get('/analytics/wear-frequency', { params });\n  },\n\n  // 获取衣物类别分布\n  getCategoryDistribution: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getCategoryDistribution();\n    }\n    return apiClient.get('/analytics/category-distribution');\n  },\n\n  // 获取季节穿着分析\n  getSeasonalAnalysis: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getSeasonalAnalysis();\n    }\n    return apiClient.get('/analytics/seasonal');\n  },\n\n  // 获取风格偏好分析\n  getStylePreferences: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getStylePreferences();\n    }\n    return apiClient.get('/analytics/style-preferences');\n  },\n\n  // 获取衣物价值分析\n  getValueAnalysis: async () => {\n    if (isDevelopment) {\n      return mockAPI.analytics.getValueAnalysis();\n    }\n    return apiClient.get('/analytics/value');\n  },\n};\n\n// 默认导出apiClient，以便其他地方直接使用\nexport default apiClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}