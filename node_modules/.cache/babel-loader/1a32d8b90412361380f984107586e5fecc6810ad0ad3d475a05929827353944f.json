{"ast":null,"code":"// 从data.js中导入数据\nimport { categories, scenesMockData, seasonsMockData, stylesMockData, clothingItems } from './data';\n\n// 模拟API延迟\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// 模拟API服务\nexport const wardrobeAPI = {\n  // 获取所有衣物类别\n  getCategories: async () => {\n    await delay(300); // 模拟网络延迟\n    return {\n      success: true,\n      data: categories\n    };\n  },\n  // 获取所有衣物\n  getClothingItems: async () => {\n    await delay(500); // 模拟网络延迟\n    // 返回数组的副本，确保包含最新添加的衣物\n    return {\n      success: true,\n      data: [...clothingItems]\n    };\n  },\n  // 根据类别获取衣物\n  getClothingItemsByCategory: async categoryId => {\n    await delay(400); // 模拟网络延迟\n    // 使用数组的副本进行过滤，确保包含最新添加的衣物\n    const items = [...clothingItems].filter(item => item.categoryId === categoryId);\n    return {\n      success: true,\n      data: items\n    };\n  },\n  // 获取衣物详情\n  getClothingItemDetail: async id => {\n    await delay(300); // 模拟网络延迟\n    // 使用数组的副本进行查找，确保包含最新添加的衣物\n    const item = [...clothingItems].find(item => item.id === id);\n    if (item) {\n      return {\n        success: true,\n        data: item\n      };\n    } else {\n      return {\n        success: false,\n        message: '未找到该衣物'\n      };\n    }\n  },\n  // 添加衣物\n  addClothingItem: async item => {\n    await delay(600); // 模拟网络延迟\n    const newItem = {\n      ...item,\n      id: clothingItems.length + 1,\n      wearCount: 0,\n      lastWorn: null\n    };\n    clothingItems.push(newItem);\n    // 返回新添加的衣物，确保包含所有必要字段\n    return {\n      success: true,\n      data: {\n        ...newItem\n      }\n    };\n  },\n  // 更新衣物信息\n  updateClothingItem: async (id, updates) => {\n    await delay(500); // 模拟网络延迟\n    // 使用数组的副本进行查找和更新，确保包含最新添加的衣物\n    const items = [...clothingItems];\n    const index = items.findIndex(item => item.id === id);\n    if (index !== -1) {\n      clothingItems[index] = {\n        ...clothingItems[index],\n        ...updates\n      };\n      return {\n        success: true,\n        data: {\n          ...clothingItems[index]\n        }\n      };\n    } else {\n      return {\n        success: false,\n        message: '未找到该衣物'\n      };\n    }\n  },\n  // 删除衣物\n  deleteClothingItem: async id => {\n    await delay(400); // 模拟网络延迟\n    const index = clothingItems.findIndex(item => item.id === id);\n    if (index !== -1) {\n      clothingItems.splice(index, 1);\n      return {\n        success: true\n      };\n    } else {\n      return {\n        success: false,\n        message: '未找到该衣物'\n      };\n    }\n  },\n  // 搜索衣物\n  searchClothingItems: async keyword => {\n    await delay(400); // 模拟网络延迟\n    const results = clothingItems.filter(item => item.name.toLowerCase().includes(keyword.toLowerCase()) || item.brand.toLowerCase().includes(keyword.toLowerCase()) || item.style.toLowerCase().includes(keyword.toLowerCase()));\n    return {\n      success: true,\n      data: results\n    };\n  },\n  // 为衣物添加标签信息\n  getClothesWithTags: items => {\n    return items.map(item => ({\n      ...item,\n      tags: [item.style || '未分类', item.category || '未分类', ...(item.seasons || []).map(s => s), item.brand || '未知品牌'].filter(tag => tag && tag !== '未分类' && tag !== '未知品牌')\n    }));\n  }\n};","map":{"version":3,"names":["categories","scenesMockData","seasonsMockData","stylesMockData","clothingItems","delay","ms","Promise","resolve","setTimeout","wardrobeAPI","getCategories","success","data","getClothingItems","getClothingItemsByCategory","categoryId","items","filter","item","getClothingItemDetail","id","find","message","addClothingItem","newItem","length","wearCount","lastWorn","push","updateClothingItem","updates","index","findIndex","deleteClothingItem","splice","searchClothingItems","keyword","results","name","toLowerCase","includes","brand","style","getClothesWithTags","map","tags","category","seasons","s","tag"],"sources":["/Users/sunxiaokai/Desktop/stylevault-vue-project/src/mock/wardrobe.js"],"sourcesContent":["// 从data.js中导入数据\nimport { categories, scenesMockData, seasonsMockData, stylesMockData, clothingItems } from './data';\n\n// 模拟API延迟\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// 模拟API服务\nexport const wardrobeAPI = {\n  // 获取所有衣物类别\n  getCategories: async () => {\n    await delay(300); // 模拟网络延迟\n    return { success: true, data: categories };\n  },\n\n  // 获取所有衣物\n  getClothingItems: async () => {\n    await delay(500); // 模拟网络延迟\n    // 返回数组的副本，确保包含最新添加的衣物\n    return { success: true, data: [...clothingItems] };\n  },\n\n  // 根据类别获取衣物\n  getClothingItemsByCategory: async categoryId => {\n    await delay(400); // 模拟网络延迟\n    // 使用数组的副本进行过滤，确保包含最新添加的衣物\n    const items = [...clothingItems].filter(item => item.categoryId === categoryId);\n    return { success: true, data: items };\n  },\n\n  // 获取衣物详情\n  getClothingItemDetail: async id => {\n    await delay(300); // 模拟网络延迟\n    // 使用数组的副本进行查找，确保包含最新添加的衣物\n    const item = [...clothingItems].find(item => item.id === id);\n    if (item) {\n      return { success: true, data: item };\n    } else {\n      return { success: false, message: '未找到该衣物' };\n    }\n  },\n\n  // 添加衣物\n  addClothingItem: async item => {\n    await delay(600); // 模拟网络延迟\n    const newItem = {\n      ...item,\n      id: clothingItems.length + 1,\n      wearCount: 0,\n      lastWorn: null,\n    };\n    clothingItems.push(newItem);\n    // 返回新添加的衣物，确保包含所有必要字段\n    return { success: true, data: { ...newItem } };\n  },\n\n  // 更新衣物信息\n  updateClothingItem: async (id, updates) => {\n    await delay(500); // 模拟网络延迟\n    // 使用数组的副本进行查找和更新，确保包含最新添加的衣物\n    const items = [...clothingItems];\n    const index = items.findIndex(item => item.id === id);\n    if (index !== -1) {\n      clothingItems[index] = { ...clothingItems[index], ...updates };\n      return { success: true, data: { ...clothingItems[index] } };\n    } else {\n      return { success: false, message: '未找到该衣物' };\n    }\n  },\n\n  // 删除衣物\n  deleteClothingItem: async id => {\n    await delay(400); // 模拟网络延迟\n    const index = clothingItems.findIndex(item => item.id === id);\n    if (index !== -1) {\n      clothingItems.splice(index, 1);\n      return { success: true };\n    } else {\n      return { success: false, message: '未找到该衣物' };\n    }\n  },\n\n  // 搜索衣物\n  searchClothingItems: async keyword => {\n    await delay(400); // 模拟网络延迟\n    const results = clothingItems.filter(\n      item =>\n        item.name.toLowerCase().includes(keyword.toLowerCase()) ||\n        item.brand.toLowerCase().includes(keyword.toLowerCase()) ||\n        item.style.toLowerCase().includes(keyword.toLowerCase())\n    );\n    return { success: true, data: results };\n  },\n\n  // 为衣物添加标签信息\n  getClothesWithTags: items => {\n    return items.map(item => ({\n      ...item,\n      tags: [\n        item.style || '未分类',\n        item.category || '未分类',\n        ...(item.seasons || []).map(s => s),\n        item.brand || '未知品牌',\n      ].filter(tag => tag && tag !== '未分类' && tag !== '未知品牌'),\n    }));\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}