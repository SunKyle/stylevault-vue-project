{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { weatherService } from '../services/weatherService';\nimport { useClothingStore } from './clothingStore';\nimport { useOutfitStore } from './outfitStore';\nexport const useWeatherStore = defineStore('weather', {\n  state: () => ({\n    currentWeather: null,\n    weatherForecast: [],\n    recommendedOutfits: [],\n    location: null,\n    loading: false,\n    error: null,\n    lastUpdated: null\n  }),\n  getters: {\n    hasWeatherData: state => !!state.currentWeather,\n    isRaining: state => state.currentWeather?.weather?.includes('雨') || false,\n    temperature: state => state.currentWeather?.temperature || 0,\n    weatherCondition: state => state.currentWeather?.weather || '未知',\n    locationName: state => state.location?.name || '未知位置'\n  },\n  actions: {\n    async fetchCurrentWeather(location) {\n      this.loading = true;\n      this.error = null;\n      try {\n        const weatherData = await weatherService.getCurrentWeather(location);\n        this.currentWeather = weatherData;\n        this.location = location;\n        this.lastUpdated = new Date();\n\n        // 获取天气推荐搭配\n        await this.fetchWeatherRecommendedOutfits();\n        return weatherData;\n      } catch (error) {\n        this.error = error.message;\n        throw error;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchWeatherForecast(location) {\n      this.loading = true;\n      this.error = null;\n      try {\n        const forecast = await weatherService.getWeatherForecast(location);\n        this.weatherForecast = forecast;\n        return forecast;\n      } catch (error) {\n        this.error = error.message;\n        throw error;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchWeatherRecommendedOutfits() {\n      if (!this.currentWeather) return;\n      const clothingStore = useClothingStore();\n      const outfitStore = useOutfitStore();\n      try {\n        // 根据天气条件筛选合适的衣物\n        const suitableClothes = clothingStore.clothingItems.filter(item => {\n          const isWeatherAppropriate = this.isWeatherAppropriate(item);\n          return isWeatherAppropriate && item.isClean;\n        });\n\n        // 生成推荐搭配\n        const recommended = await weatherService.getOutfitRecommendations({\n          weather: this.currentWeather,\n          clothes: suitableClothes\n        });\n        this.recommendedOutfits = recommended;\n      } catch (error) {\n        console.error('获取天气推荐搭配失败:', error);\n      }\n    },\n    isWeatherAppropriate(item) {\n      const temp = this.temperature;\n\n      // 根据温度判断衣物是否合适\n      if (item.type === '外套') {\n        return temp < 20;\n      } else if (item.type === '毛衣') {\n        return temp < 15;\n      } else if (item.type === 'T恤') {\n        return temp > 15;\n      } else if (item.type === '短裤') {\n        return temp > 25;\n      }\n      return true;\n    },\n    async updateLocation(newLocation) {\n      this.location = newLocation;\n      await this.fetchCurrentWeather(newLocation);\n    },\n    clearWeatherData() {\n      this.currentWeather = null;\n      this.weatherForecast = [];\n      this.recommendedOutfits = [];\n      this.error = null;\n    },\n    async initializeWeatherData() {\n      // 初始化时尝试获取默认位置的天气\n      const defaultLocation = {\n        name: '北京',\n        lat: 39.9042,\n        lng: 116.4074\n      };\n      await this.fetchCurrentWeather(defaultLocation);\n    }\n  }\n});","map":{"version":3,"names":["defineStore","weatherService","useClothingStore","useOutfitStore","useWeatherStore","state","currentWeather","weatherForecast","recommendedOutfits","location","loading","error","lastUpdated","getters","hasWeatherData","isRaining","weather","includes","temperature","weatherCondition","locationName","name","actions","fetchCurrentWeather","weatherData","getCurrentWeather","Date","fetchWeatherRecommendedOutfits","message","fetchWeatherForecast","forecast","getWeatherForecast","clothingStore","outfitStore","suitableClothes","clothingItems","filter","item","isWeatherAppropriate","isClean","recommended","getOutfitRecommendations","clothes","console","temp","type","updateLocation","newLocation","clearWeatherData","initializeWeatherData","defaultLocation","lat","lng"],"sources":["/Users/sunxiaokai/Desktop/stylevault-vue-project/src/stores/weatherStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport { weatherService } from '../services/weatherService';\nimport { useClothingStore } from './clothingStore';\nimport { useOutfitStore } from './outfitStore';\n\nexport const useWeatherStore = defineStore('weather', {\n  state: () => ({\n    currentWeather: null,\n    weatherForecast: [],\n    recommendedOutfits: [],\n    location: null,\n    loading: false,\n    error: null,\n    lastUpdated: null,\n  }),\n\n  getters: {\n    hasWeatherData: state => !!state.currentWeather,\n    isRaining: state => state.currentWeather?.weather?.includes('雨') || false,\n    temperature: state => state.currentWeather?.temperature || 0,\n    weatherCondition: state => state.currentWeather?.weather || '未知',\n    locationName: state => state.location?.name || '未知位置',\n  },\n\n  actions: {\n    async fetchCurrentWeather(location) {\n      this.loading = true;\n      this.error = null;\n      try {\n        const weatherData = await weatherService.getCurrentWeather(location);\n        this.currentWeather = weatherData;\n        this.location = location;\n        this.lastUpdated = new Date();\n\n        // 获取天气推荐搭配\n        await this.fetchWeatherRecommendedOutfits();\n\n        return weatherData;\n      } catch (error) {\n        this.error = error.message;\n        throw error;\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async fetchWeatherForecast(location) {\n      this.loading = true;\n      this.error = null;\n      try {\n        const forecast = await weatherService.getWeatherForecast(location);\n        this.weatherForecast = forecast;\n        return forecast;\n      } catch (error) {\n        this.error = error.message;\n        throw error;\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async fetchWeatherRecommendedOutfits() {\n      if (!this.currentWeather) return;\n\n      const clothingStore = useClothingStore();\n      const outfitStore = useOutfitStore();\n\n      try {\n        // 根据天气条件筛选合适的衣物\n        const suitableClothes = clothingStore.clothingItems.filter(item => {\n          const isWeatherAppropriate = this.isWeatherAppropriate(item);\n          return isWeatherAppropriate && item.isClean;\n        });\n\n        // 生成推荐搭配\n        const recommended = await weatherService.getOutfitRecommendations({\n          weather: this.currentWeather,\n          clothes: suitableClothes,\n        });\n\n        this.recommendedOutfits = recommended;\n      } catch (error) {\n        console.error('获取天气推荐搭配失败:', error);\n      }\n    },\n\n    isWeatherAppropriate(item) {\n      const temp = this.temperature;\n\n      // 根据温度判断衣物是否合适\n      if (item.type === '外套') {\n        return temp < 20;\n      } else if (item.type === '毛衣') {\n        return temp < 15;\n      } else if (item.type === 'T恤') {\n        return temp > 15;\n      } else if (item.type === '短裤') {\n        return temp > 25;\n      }\n\n      return true;\n    },\n\n    async updateLocation(newLocation) {\n      this.location = newLocation;\n      await this.fetchCurrentWeather(newLocation);\n    },\n\n    clearWeatherData() {\n      this.currentWeather = null;\n      this.weatherForecast = [];\n      this.recommendedOutfits = [];\n      this.error = null;\n    },\n\n    async initializeWeatherData() {\n      // 初始化时尝试获取默认位置的天气\n      const defaultLocation = { name: '北京', lat: 39.9042, lng: 116.4074 };\n      await this.fetchCurrentWeather(defaultLocation);\n    },\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}